{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\uff01","text":""},{"location":"#_1","title":"\u6b22\u8fce\uff01","text":"<sub>\u300e\u305d\u306e\u6642\u3092\u5f85\u3064\u3088\u300f</sub>      \u6211\u4eec\u767b\u4e0a\u9ad8\u5854\uff0c\u770b\u5230\u7684\u5374\u53ea\u6709\u9ed1\u591c\u3002  \u2014\u2014\u5b89\u5fb7\u70c8\u00b7\u7eaa\u5fb7\u300a\u5730\u7cae\u300b  \u7ad9\u70b9\u7edf\u8ba1  \u672c\u6587\u6863\u76ee\u524d\u5171 {{pages}} \u9875\uff0c\u7d2f\u8ba1 {{words}} \u5b57\uff01  2025-09-22 23:09:482025-10-07 06:23:11"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/#blog","title":"Blog","text":"2025-09-22 23:16:192025-10-07 06:23:11"},{"location":"blog/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/","title":"\u66f4\u65b0\u65e5\u5fd7","text":""},{"location":"blog/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/#002-2025-10-6","title":"0.0.2 2025-10-6","text":"<ul> <li>\u4f7f\u7528tk\u521b\u5efa\u7a97\u53e3</li> <li>\u4fdd\u6301\u7a97\u53e3</li> <li>\u52a0\u5165\u6807\u5934</li> <li>\u52a0\u5165\u6807\u7b7e\u548c\u8f93\u5165\u6846</li> <li>dataclass\u4f7f\u7528</li> <li>\u8bbe\u7f6e\u56de\u8c03</li> <li>\u5e38\u91cf\u7c7b</li> <li>\u7ec4\u5408ui\u8fd4\u56de\u7c7b\u4e0e\u5e38\u91cf\u7c7b</li> <li>\u5f00\u59cb\u4eff\u771f\u51fd\u6570</li> <li>\u5b66\u4e60\u8c37\u6b4c\u98ce\u683c\u6ce8\u91ca</li> <li>\u52a0\u5165\u8c37\u6b4c\u98ce\u683c\u6ce8\u91ca</li> <li>\u8fd0\u884c\u4eff\u771f\u4e3b\u5faa\u73af</li> <li>\u5355\u6b21\u4eff\u771f\u51fd\u6570</li> <li>\u53d1\u7aef\u751f\u6210\u51fd\u6570</li> <li>\u751f\u6210\u8bbe\u7f6ebit\u6570\u91cf\u6570\u636e</li> <li>\u5377\u79ef\u7f16\u7801</li> <li>\u5220\u4f59</li> <li>python\u8bfb\u53d6mat</li> <li>\u4e0e\u524d\u9762\u5199\u7684\u6587\u4ef6\u5e76\u4e0a</li> <li>python\u753b\u56fe<ul> <li>\u57fa\u4e8ex\uff0cy\u70b9\u753b\u56fe</li> <li>\u591a\u70b9\u56fe</li> <li>\u5f3a\u8c03\u8fde\u63a5\u70b9\u56fe</li> <li>\u989c\u8272\u53c2\u8003</li> <li>\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8bbe\u7f6e\u66f2\u7ebf</li> <li>\u8bbe\u7f6e\u6807\u8bb0\u5c3a\u5bf8</li> <li>\u540c\u65f6\u753b\u4e24\u6761\u66f2\u7ebf</li> <li>\u8bbe\u7f6e\u6807\u7b7e\u4e0e\u6807\u9898</li> <li>\u6dfb\u52a0\u7f51\u683c\u7ebf</li> </ul> </li> <li>\u901a\u4fe1\u7cfb\u7edf\u4eff\u771f<ul> <li>matlab\u52a0\u5165\u81ea\u5df1\u7684\u5e93\u8def\u5f84</li> <li>\u8bbe\u7f6e\u6a2a\u5750\u6807\u8303\u56f4</li> <li>\u9a8c\u8bc1\u5377\u79ef\u7f16\u7801\u540e\u7ed3\u679c</li> <li>\u5220\u4f59\u6a21\u5757\u5f00\u53d1</li> <li>\u6839\u636e\u8c03\u5236\u9636\u6570\u83b7\u5f97\u8c03\u5236\u6bd4\u7279\u6570</li> <li>\u786e\u5b9aOFDM\u7b26\u53f7\u751f\u6210\u6570\u91cf</li> <li>\u786e\u5b9a\u586b\u5145bit\u6570\u91cf\uff0c\u586b\u5145bit</li> </ul> </li> </ul>"},{"location":"blog/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/#001-2025-10-5","title":"0.0.1 2025-10-5","text":"<ul> <li>\u6807\u9898\u653e\u5728\u9876\u5c42</li> <li>\u9876\u5c42\u6807\u9898\u4fdd\u6301</li> <li>\u8fd4\u56de\u9876\u90e8</li> <li>\u542f\u7528\u9875\u811a</li> <li>\u96c6\u6210\u76ee\u5f55\u90fd\u5728\u5de6\u8fb9</li> <li>\u9ed8\u8ba4\u6253\u5f00\u5b50\u83dc\u5355</li> <li>\u4e2d\u6587\u641c\u7d22\u652f\u6301</li> <li>\u641c\u7d22\u8865\u5168</li> <li>\u641c\u7d22\u5230\u7684\u7ed3\u679c\u9ad8\u4eae</li> <li>\u641c\u7d22\u5171\u4eab</li> <li>\u4ee3\u7801\u590d\u5236</li> <li>\u76ee\u5f55\u8ddf\u968f\u6eda\u8f6e</li> <li>\u6253\u5f00mkdocs-material\u5b98\u7f51</li> <li>\u4f7f\u7528\u6ce8\u91ca</li> <li>\u5c5e\u6027\u5217\u8868\u5d4c\u5957\u6ce8\u91ca</li> <li>\u5728\u8b66\u544a\u4e2d\u4f7f\u7528</li> <li>\u5185\u5bb9\u9009\u9879\u5361\u4e2d\u6ce8\u91ca</li> <li>HTML\u65b9\u5f0f\u4f7f\u7528\u5c5e\u6027\u5217\u8868</li> <li>\u8bbe\u7f6e\u9875\u9762\u56fe\u6807\uff0c\u5728\u5de6\u8fb9\u7d22\u5f15\u680f</li> <li>\u9875\u9762\u57fa\u672c\u8bbe\u7f6e</li> <li>\u66f4\u6539\u8b66\u544a\u56fe\u6807</li> <li>\u66f4\u6539\u6ce8\u91ca\u56fe\u6807</li> <li>\u6309\u94ae\u914d\u7f6e</li> <li>\u6dfb\u52a0\u6309\u94ae</li> <li>\u6dfb\u52a0\u4e3b\u6309\u94ae</li> <li>\u6dfb\u52a0\u56fe\u6807\u6309\u94ae</li> <li>\u4ee3\u7801\u5757\u914d\u7f6e</li> <li>\u4ee3\u7801\u590d\u5236\u914d\u7f6e</li> <li>\u4ee3\u7801\u9009\u62e9</li> <li>\u4ee3\u7801\u6ce8\u91ca</li> <li>\u6dfb\u52a0\u6807\u9898</li> <li>\u6dfb\u52a0\u884c\u53f7</li> <li>\u6dfb\u52a0\u7ebf\u6761</li> <li>\u5185\u8054\u4ee3\u7801\u5757</li> <li>\u5d4c\u5165\u5916\u90e8\u4ee3\u7801\u6587\u4ef6</li> <li>\u6ce8\u91ca\u5d4c\u5957</li> <li>md\u6ce8\u91ca\u5d4c\u5957</li> <li>\u5185\u5bb9\u9009\u9879\u5361\u914d\u7f6e</li> <li>\u540c\u540d\u7edf\u4e00\u5207\u6362</li> <li>\u4ee3\u7801\u5757\u5206\u7ec4</li> <li>\u5d4c\u5957\u5185\u5bb9</li> <li>\u6570\u636e\u8868\u914d\u7f6e</li> <li>\u6570\u636e\u8868\u4f7f\u7528</li> <li>\u6570\u636e\u8868\u5bf9\u9f50\u65b9\u5f0f</li> <li>\u6570\u636e\u8868\u53ef\u6392\u5e8f</li> <li>\u56fe\u914d\u7f6e</li> <li>\u4f7f\u7528\u56fe</li> <li>\u5e8f\u5217\u56fe</li> <li>\u72b6\u6001\u56fe</li> <li>\u7c7b\u56fe</li> <li>\u811a\u6ce8\u914d\u7f6e</li> <li>\u811a\u6ce8\u7528\u6cd5</li> <li>\u683c\u5f0f\u914d\u7f6e</li> <li>critic\u7528\u6cd5</li> <li>\u5176\u4ed6\u7528\u6cd5</li> <li>\u4e0a\u4e0b\u6807</li> <li>\u952e\u76d8\u6309\u952e</li> <li>\u7f51\u683c\u914d\u7f6e</li> <li>\u7f51\u683c\u7528\u6cd5\u8bf4\u660e</li> <li>\u5361\u7247\u7f51\u683c\u4f7f\u7528</li> <li>\u5361\u7247\u7f51\u683c\u5217\u8868\u8bed\u6cd5\u4f7f\u7528</li> <li>\u5361\u7247\u7f51\u683c\u5217\u8bed\u6cd5\u4f7f\u7528</li> <li>\u901a\u7528\u7f51\u683c\u8bed\u6cd5</li> <li>\u56fe\u6807\uff0c\u8868\u60c5\uff0c\u7b26\u53f7\u914d\u7f6e</li> <li>\u8868\u60c5\u7b26\u53f7\u7528\u6cd5</li> <li>\u56fe\u6807\u7b26\u53f7\u7528\u6cd5</li> <li>\u6539\u53d8\u56fe\u6807\u989c\u8272</li> <li>\u5e26\u52a8\u753b\u56fe\u6807</li> <li>\u56fe\u50cf\u914d\u7f6e</li> <li>\u706f\u5149\u7bb1</li> <li>\u56fe\u50cf\u5bf9\u9f50</li> <li>\u56fe\u50cf\u8bf4\u660e</li> <li>\u5217\u8868\u914d\u7f6e</li> <li>\u7528\u6cd5</li> <li>\u6570\u5b66\u516c\u5f0f\u914d\u7f6e</li> <li>\u6570\u5b66\u516c\u5f0f\u7b80\u6613\u914d\u7f6e</li> <li>\u52a0\u5165\u6587\u6863\u7edf\u8ba1</li> <li>\u53f3\u4e0a\u89d2\u52a0\u4e2a\u4ed3\u5e93</li> <li>\u53f3\u4e0a\u89d2\u56fe\u6807\u66f4\u6362</li> <li>\u53f3\u4e0a\u89d2star\u5f04\u56de\u6765\uff08\u53ea\u662f\u56e0\u4e3a\u7f51\u4e0d\u597d\uff09</li> <li>\u67e5\u770b\u6e90\u4ee3\u7801\u548c\u7f16\u8f91\u6b64\u9875</li> <li>\u5b57\u4f53\u786e\u5b9a</li> <li>\u66f4\u65b0\u5386\u53f2</li> <li>\u66f4\u6539\u80cc\u666f\u989c\u8272</li> <li>\u81ea\u52a8\u5bfc\u822a\u76ee\u5f55</li> <li>\u663e\u793a\u8def\u5f84</li> </ul> 2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"blog/%E6%A0%87%E7%AD%BE/","title":"\u6807\u7b7e","text":""},{"location":"blog/%E6%A0%87%E7%AD%BE/#tag:80211a","title":"802.11a","text":"<ul> <li>            802.11a\u529f\u80fd\u5b9e\u73b0          </li> </ul>"},{"location":"blog/%E6%A0%87%E7%AD%BE/#tag:matlab","title":"matlab","text":"<ul> <li>            matlab\u8865\u5145          </li> </ul>"},{"location":"blog/%E6%A0%87%E7%AD%BE/#tag:python","title":"python","text":"<ul> <li>            python\u753b\u56fe          </li> </ul>"},{"location":"blog/%E6%A0%87%E7%AD%BE/#tag:vscode","title":"vscode","text":"<ul> <li>            vscode\u4fbf\u6377\u64cd\u4f5c          </li> </ul>"},{"location":"blog/%E6%A0%87%E7%AD%BE/#tag:\u7b2c\u4e00\u4e2a\u535a\u5ba2","title":"\u7b2c\u4e00\u4e2a\u535a\u5ba2","text":"<ul> <li>            \u7b2c\u4e00\u7bc7\u535a\u5ba2          </li> </ul>"},{"location":"blog/%E6%A0%87%E7%AD%BE/#tag:\u901a\u4fe1\u7cfb\u7edf","title":"\u901a\u4fe1\u7cfb\u7edf","text":"<ul> <li>            802.11a\u529f\u80fd\u5b9e\u73b0          </li> </ul> 2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"blog/2025/10/06/matlab%E8%A1%A5%E5%85%85/","title":"matlab\u8865\u5145","text":"<p>\u65e8\u5728\u8865\u5145\u4ee5\u524d\u6ca1\u6ce8\u610f\u7684matlab\u77e5\u8bc6</p>","tags":["matlab"]},{"location":"blog/2025/10/06/matlab%E8%A1%A5%E5%85%85/#matlab","title":"matlab\u8865\u5145","text":"","tags":["matlab"]},{"location":"blog/2025/10/06/matlab%E8%A1%A5%E5%85%85/#_1","title":"\u52a0\u5165\u81ea\u5df1\u7684\u5e93","text":"<p><code>addpath('C:\\MyLibrary');</code></p> 2025-10-07 06:23:112025-10-07 06:23:11","tags":["matlab"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/","title":"python\u753b\u56fe","text":"<p>python\u57fa\u672c\u753b\u56fe\u5b9e\u73b0</p>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#python","title":"python\u753b\u56fe","text":"<p>\u6ce8\u610f\u5f15\u5165\u76f8\u5e94\u7684\u5e93 </p>Python<pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n</code></pre><p></p>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_1","title":"\u5355\u5f20\u56fe","text":"Python<pre><code># \u5728\u56fe\u4e2d\u4ece\u4f4d\u7f6e(0,0)\u5230\u4f4d\u7f6e(6,250)\u753b\u4e00\u6761\u7ebf  \nxpoints = np.array([0, 6])  \nypoints = np.array([0, 250])  \nplt.plot(xpoints, ypoints)  \nplt.show()\n\n# \u4e0d\u6307\u5b9ax\u8f74\u7684\u70b9\uff0c\u9ed8\u8ba4\u4e3a0\u52301\u5e73\u5747\u5206\nypoints = np.array([0, 250])\nplt.plot(ypoints)  \nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_2","title":"\u591a\u70b9\u56fe","text":"Python<pre><code>xpoints = np.array([33, 7, 6, 13])  \nypoints = np.array([3, 23, 88, 42])  \nplt.plot(xpoints, ypoints)  \nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_3","title":"\u5f3a\u8c03\u8fde\u63a5\u70b9","text":"Python<pre><code>xpoints = np.array([1, 3, 5, 7])  \nypoints = np.array([3, 23, 88, 42])  \n# plt.plot(xpoints, ypoints, marker='o')  \nplt.plot(xpoints, ypoints, marker='*')  \nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_4","title":"\u989c\u8272\u53c2\u8003","text":"\u5b57\u7b26 \u989c\u8272 b \u84dd\u8272 g \u7eff\u8272 r \u7ea2\u8272 c \u9752\u8272 m \u54c1\u7ea2\u8272 y \u9ec4\u8272 k \u9ed1\u8272 w \u767d\u8272","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_5","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8bbe\u7f6e\u66f2\u7ebf","text":"<p>\u6309\u7167marker|line|color\u7684\u987a\u5e8f</p> Python<pre><code>xpoints = np.array([1, 3, 5, 7])  \nypoints = np.array([3, 23, 88, 42])  \nplt.plot(xpoints, ypoints, 'o:r')  \nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_6","title":"\u8bbe\u7f6e\u6807\u8bb0\u5c3a\u5bf8","text":"<p>ms\u6216\u8005marksize</p> Python<pre><code>xpoints = np.array([1, 3, 5, 7])  \nypoints = np.array([3, 23, 88, 42])  \nplt.plot(xpoints, ypoints, 'o:r',ms='20')  \nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_7","title":"\u540c\u65f6\u753b\u4e24\u6761\u66f2\u7ebf","text":"Python<pre><code>xpoints = np.array([1, 3, 5, 7])  \nypoints1 = np.array([3, 23, 88, 42])  \nypoints2 = np.array([78, 13, 44, 99])  \nplt.plot(xpoints, ypoints1)  \nplt.plot(xpoints, ypoints2)  \nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_8","title":"\u8bbe\u7f6e\u6807\u7b7e\u4e0e\u6807\u9898","text":"<p>\u6ce8\u610f\u8981\u8bbe\u7f6e\u5b57\u4f53</p> Python<pre><code># \u8bbe\u7f6e\u5b57\u4f53\u4e3a\u6977\u4f53\nmatplotlib.rcParams['font.sans-serif'] = ['KaiTi']  \n\nxpoints = np.array([1, 3, 5, 7])  \nypoints = np.array([78, 13, 44, 99])  \nplt.plot(xpoints, ypoints)  \nplt.xlabel('\u65f6\u95f4\u8282\u70b9')  \nplt.ylabel('\u6536\u5165')  \nplt.title('\u6807\u9898')\nplt.show()\n</code></pre>","tags":["python"]},{"location":"blog/2025/10/06/python%E7%94%BB%E5%9B%BE/#_9","title":"\u6dfb\u52a0\u7f51\u683c\u7ebf","text":"<p><code>plt.grid()</code></p> 2025-10-07 06:23:112025-10-07 06:23:11","tags":["python"]},{"location":"blog/2025/10/06/vscode%E4%BE%BF%E6%8D%B7%E6%93%8D%E4%BD%9C/","title":"vscode\u4fbf\u6377\u64cd\u4f5c","text":"<p>vscode\u7684\u4e00\u4e9b\u64cd\u4f5c\u5c0f\u6280\u5de7</p>","tags":["vscode"]},{"location":"blog/2025/10/06/vscode%E4%BE%BF%E6%8D%B7%E6%93%8D%E4%BD%9C/#_1","title":"\u64cd\u4f5c\u5c0f\u6280\u5de7","text":"","tags":["vscode"]},{"location":"blog/2025/10/06/vscode%E4%BE%BF%E6%8D%B7%E6%93%8D%E4%BD%9C/#_2","title":"\u591a\u884c\u540c\u65f6\u7f16\u8f91","text":"<p>Shift+Ctrl+L</p> 2025-10-07 06:23:112025-10-07 06:23:11","tags":["vscode"]},{"location":"blog/2025/10/05/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","title":"\u7b2c\u4e00\u7bc7\u535a\u5ba2","text":"<p>\u7b80\u4ecb</p> <p>\u8fd9\u91cc\u662f\u7b2c\u4e00\u4e2a\u535a\u5ba2</p> 2025-10-07 06:23:112025-10-07 06:23:11","tags":["\u7b2c\u4e00\u4e2a\u535a\u5ba2"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/","title":"802.11a\u529f\u80fd\u5b9e\u73b0","text":"<p>\u5b8c\u6210802.11a\u901a\u4fe1\u4f20\u8f93\u7cfb\u7edf\u7684python\u4eff\u771f\u5b9e\u73b0</p>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#ui","title":"UI\u8bbe\u8ba1","text":"","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_1","title":"\u7a97\u53e3\u521b\u5efa","text":"Python<pre><code>import tkinter as tk\n\n# \u521b\u5efa\u7a97\u53e3\nroot = tk.Tk()\nroot.title(\"\u4eff\u771f\u53c2\u6570\u8bbe\u7f6e\")\nroot.mainloop()\n</code></pre>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_2","title":"\u52a0\u5165\u6807\u7b7e\u548c\u8f93\u5165\u6846","text":"Python<pre><code># \u52a0\u5165\u6807\u7b7e\u548c\u8f93\u5165\u6846\npkt_len_var = tk.IntVar(value=\"100\")\ntk.Label(root, text=\"\u6807\u7b7e\").grid(row=1, column=0, sticky='e', padx=5, pady=2)\ntk.Entry(root, textvariable=pkt_len_var).grid(row=1, column=1, padx=5, pady=2)\n</code></pre>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_3","title":"\u6784\u5efa\u63a7\u4ef6","text":"Python<pre><code># \u6784\u5efa\u63a7\u4ef6\ndef build_field(root, fields):\n    # \u5e03\u5c40\u63a7\u4ef6\n    num_per_col = (len(fields) + 1) // 2  # \u6bcf\u5217\u663e\u793a\u7684\u884c\u6570\n    for i, (label, var) in enumerate(fields):\n        col = 0 if i &lt; num_per_col else 2\n        row = i if i &lt; num_per_col else i - num_per_col\n        tk.Label(root, text=label).grid(row=row+1, column=col, sticky='e', padx=5, pady=2)\n\n        # \u7279\u6b8a\u5904\u7406\n        if(label==\"\u7f16\u7801\u7387\"):\n            combo=ttk.Combobox(root,textvariable=var,state='readonly')\n            combo['values']=('R1/2','R2/3','R3/4')\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2)\n            combo.current(0)\n        elif(label==\"\u8c03\u5236\u65b9\u5f0f\"):\n            combo=ttk.Combobox(root,textvariable=var,state='readonly')\n            combo['values']=('BPSK','QPSK','16QAM','64QAM')\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2)\n            combo.current(0)\n        elif(label==\"\u5206\u96c6\u53d1\u5c04\"):\n            combo=ttk.Radiobutton(root,text=\"\u662f\",variable=var,value=1)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='w')\n            combo=ttk.Radiobutton(root,text=\"\u5426\",variable=var,value=0)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='e')\n            var.set(0)\n        elif(label==\"\u4ea4\u7ec7\u6bd4\u7279\"):\n            combo=ttk.Radiobutton(root,text=\"\u662f\",variable=var,value=1)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='w')\n            combo=ttk.Radiobutton(root,text=\"\u5426\",variable=var,value=0)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='e')\n            var.set(1)\n        else:\n            tk.Entry(root, textvariable=var).grid(row=row+1, column=col+1, padx=5, pady=2)\n</code></pre> <p>\u52a0\u5165\u4eff\u771f\u5f00\u59cb\u6309\u94ae\u5e76\u8bbe\u7f6e\u89e6\u53d1\u53c2\u6570\u56de\u8c03</p> Python<pre><code># \u5f00\u59cb\u4eff\u771f\u6309\u94ae\u56de\u8c03\ndef on_start() -&gt; None:\n    result[\"value\"] = SimOptions(\n        pkt_len_var=field_vars[\"PktLen(\u5b57\u8282)\"].get(),\n        conv_code_rate_var=field_vars[\"\u7f16\u7801\u7387\"].get(),\n        interleave_bits_var=bool(field_vars[\"\u4ea4\u7ec7\u6bd4\u7279\"].get()),\n        modulation_var=field_vars[\"\u8c03\u5236\u65b9\u5f0f\"].get(),\n        use_tx_div_var=bool(field_vars[\"\u5206\u96c6\u53d1\u5c04\"].get()),\n        use_rx_div_var=int(field_vars[\"UseRxDiversity\"].get()),\n        freq_error_var=int(field_vars[\"FreqError\"].get()),\n        channel_model_var=field_vars[\"ChannelModel\"].get(),\n        exp_decay_trms_var=float(field_vars[\"ExpDecayTrms\"].get()),\n        snr_var=float(field_vars[\"\u4fe1\u566a\u6bd4\uff08SNR\uff09\"].get()),\n        use_tx_pa_var=int(field_vars[\"UseTxPA\"].get()),\n        use_phase_noise_var=int(field_vars[\"UsePhaseNoise\"].get()),\n        phase_noise_dbc_var=float(field_vars[\"PhaseNoiseDbcLevel\"].get()),\n        phase_noise_cfreq_var=float(field_vars[\"PhaseNoiseCornerFreq\"].get()),\n        phase_noise_floor_var=float(field_vars[\"PhaseNoiseFloor\"].get()),\n        packet_detection_var=int(field_vars[\"PacketDetection\"].get()),\n        tx_pwr_spectrum_test_var=int(field_vars[\"TxSpectrumShape\"].get()),\n        fine_time_sync_var=int(field_vars[\"FineTimeSync\"].get()),\n        freq_sync_var=int(field_vars[\"FreqSync\"].get()),\n        pilot_phase_tracking_var=int(field_vars[\"PilotPhaseTrack\"].get()),\n        channel_estimation_var=int(field_vars[\"ChannelEst\"].get()),\n        rx_timing_offset_var=int(field_vars[\"RxTimingOffset\"].get()),\n        pkts_per_run_var=int(field_vars[\"PktsToSimulate\"].get()),\n    )\n    root.destroy()\n\n# \u6dfb\u52a0\u5f00\u59cb\u4eff\u771f\u6309\u94ae\ntk.Button(root, text=\"\u4eff\u771f\u5f00\u59cb\", command=on_start).grid(\n    row=(len(fields) + 1) // 2+1, column=0, columnspan=4, sticky='we', pady=10\n)\n\n# \u63d0\u53d6\u53d8\u91cf\nfield_vars = {label: var for label, var in fields}\nresult: dict[str, SimOptions] = {}\n</code></pre> <p></p>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_4","title":"\u6a21\u5757\u5f00\u53d1","text":"","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_5","title":"\u5377\u79ef\u7f16\u7801","text":"<p>\u5047\u5b9a\u521d\u59cb\u4e3a800bit</p> <ol> <li>\u5377\u79ef\u540e\u957f\u5ea6 = \u751f\u6210\u591a\u9879\u5f0f\u957f\u5ea6 + \u8f93\u5165\u6bd4\u7279\u6570 - 1</li> <li>800bit\u6570\u636e\u5206\u522b\u4e0e2*7\u591a\u9879\u5f0f\u5377\u79ef\uff0c\u540c\u65f6\u6a21\u4e8c\u8ba1\u7b97</li> <li>\u7ed3\u679c\u6309\u5217\u5c55\u5f00\u540e\u8f93\u51fa</li> </ol> \u66f4\u6539\u540e\u6e90\u4ee3\u7801 Python<pre><code>def convolutional_encode(data_bits, para:Para):\n    \"\"\"\u5377\u79ef\u7f16\u7801\u51fd\u6570\n\n    1. \u5377\u79ef\u540e\u957f\u5ea6 = \u751f\u6210\u591a\u9879\u5f0f\u957f\u5ea6 + \u8f93\u5165\u6bd4\u7279\u6570 - 1\n    2. \u6570\u636e\u5206\u522b\u4e0e\u591a\u9879\u5f0f\u5377\u79ef\uff0c\u540c\u65f6\u6a21\u4e8c\u8ba1\u7b97\n    3. \u7ed3\u679c\u6309\u5217\u5c55\u5f00\u540e\u8f93\u51fa\n\n    Args:\n        data_bits (np.ndarray): \u8f93\u5165\u6570\u636e\u6bd4\u7279\u5e8f\u5217\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n    Returns:\n        np.ndarray: \u5377\u79ef\u7f16\u7801\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n\n    poly = para.sim_consts.ConvCodeGenPoly\n    number_rows = poly.shape[0]\n    number_bits = poly.shape[1] + len(data_bits) - 1\n    uncoded_bits = np.zeros((number_rows, number_bits), dtype=int)\n    for row in range(number_rows):\n        conv_result = np.convolve(data_bits, poly[row])\n        uncoded_bits[row, :] = np.mod(conv_result, 2)\n    # \u6309\u5217\u5c55\u5f00\n    coded_bits = uncoded_bits.T.flatten()\n    return coded_bits\n</code></pre> Matlab<pre><code>function coded_bits = tx_conv_encoder(in_bits)\n\nglobal sim_consts;\n\n%1     0     1     1     0     1     1\n%1     1     1     1     0     0     1\nnumber_rows = size(sim_consts.ConvCodeGenPoly, 1);\nnumber_bits = size(sim_consts.ConvCodeGenPoly,2)+length(in_bits)-1;\n\nuncoded_bits = zeros(number_rows, number_bits);\n\nfor row=1:number_rows\n    uncoded_bits(row,1:number_bits)=rem(conv(in_bits, sim_consts.ConvCodeGenPoly(row,:)),2);\nend\n\ncoded_bits=uncoded_bits(:);\n</code></pre>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_6","title":"\u5220\u4f59","text":"<p>\u6839\u636e\u7801\u7387\u9009\u62e9\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4\u548c\u7a97\u53e3\u5927\u5c0f\u3002</p> \u66f4\u6539\u540e\u6e90\u4ee3\u7801 Python<pre><code>def get_punc_params(code_rate):\n    \"\"\"\u83b7\u53d6\u5220\u4f59\u53c2\u6570\u51fd\u6570\n\n    \u6839\u636e\u7801\u7387\u9009\u62e9\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4\u548c\u7a97\u53e3\u5927\u5c0f\u3002\n\n    Args:\n        code_rate (str): \u7801\u7387\u9009\u62e9 ('R1/2', 'R2/3', 'R3/4')\n    Returns:\n        tuple: \u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4\u548c\u7a97\u53e3\u5927\u5c0f\n    \"\"\"\n\n    if code_rate == 'R3/4':\n        # R = 3/4\uff0c\u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 x x 6]\uff0cx =\u5220\u4f59\n        punc_patt = np.array([1, 2, 3, 6])# \u5220\u9664\u540e\u4f59\u4e0b\u7684\u4f4d\u7f6e\n        punc_patt_size = 6# \u4e00\u7ec4\u7684\u6570\u91cf\n    elif code_rate == 'R2/3':\n        # % R=2/3, \u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 x], x = \u5220\u4f59\n        punc_patt = np.array([1, 2, 3])\n        punc_patt_size = 4\n    elif code_rate == 'R1/2':\n        # R=1/2, \u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 4 5 6], x = \u5220\u4f59 \n        punc_patt = np.array([1, 2, 3, 4, 5, 6])\n        punc_patt_size = 6\n    else:\n        raise ValueError('\u672a\u5b9a\u4e49\u7684\u7f16\u7801\u7387')\n    return punc_patt, punc_patt_size\n</code></pre> Matlab<pre><code>function [punc_patt, punc_patt_size] = get_punc_params(code_rate)\n\nif strcmp(code_rate,'R3/4')\n  % R=3/4, Puncture pattern: [1 2 3 x x 6], x = punctured  R = 3/4\uff0c\u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 x x 6]\uff0cx =\u5220\u4f59\n  punc_patt=[1 2 3 6];%\u5220\u9664\u540e\u4f59\u4e0b\u7684\u4f4d\u7f6e\n  punc_patt_size = 6;%\u4e00\u7ec4\u7684\u6570\u91cf\nelseif strcmp(code_rate, 'R2/3')\n  % R=2/3, Puncture pattern: [1 2 3 x], x = punctured \n  punc_patt=[1 2 3]; \n  punc_patt_size = 4;\nelseif strcmp(code_rate, 'R1/2')\n  % R=1/2, Puncture pattern: [1 2 3 4 5 6], x = punctured \n  punc_patt=[1 2 3 4 5 6];\n  punc_patt_size = 6;\nelse\n  error('Undefined convolutional code rate');\nend\n</code></pre> <p>\u5220\u4f59\u64cd\u4f5c\u5b9e\u9645\u5c31\u662f\u73b0\u6839\u636e\u901f\u7387\u786e\u5b9a\u5220\u4f59\u7684\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u5206\u7ec4\u5927\u5c0f\u4e0e\u5220\u9664\u4f4d\u7f6e\uff0c\u5c06\u8f93\u5165\u6570\u636e\u51e0\u4e2a\u4e00\u7ec4\u3002 \u53ef\u4ee5\u60f3\u8c61\u6210\u6392\u5217\u6210\u77e9\u9635\uff0c\u7136\u540e\u6309\u4f4d\u7f6e\u7edf\u4e00\u53bb\u9664\uff0c\u5206\u7ec4\u5269\u4f59\u7684\u6570\u636e\u540c\u6837\u6309\u7167\u5220\u4f59\u65b9\u5f0f\u5904\u7406</p> \u66f4\u6539\u540e\u6e90\u4ee3\u7801 Python<pre><code>def tx_puncture(in_bits, code_rate):\n    \"\"\"\u53d1\u5c04\u673a\u5220\u4f59\u51fd\u6570\n\n    \u4f9d\u636e\u7801\u7387\u83b7\u53d6\u5220\u4f59\u7a97\u53e3\u5927\u5c0f\u548c\u4fdd\u7559\u4f4d\u7f6e\n    \u8ba1\u7b97\u5c3e\u90e8\u4e0d\u8db3\u4e00\u7a97\u7684\u6b8b\u4f59\u6bd4\u7279\u6570\n    \u5bf9\u4e3b\u6570\u636e\u6309\u7a97\u53e3\u91cd\u6392\u6210\u77e9\u9635 puncture_table\uff0c\u4ec5\u4fdd\u7559 punc_patt \u6307\u5b9a\u7684\u884c\u5f97\u5230\u5220\u4f59\u4e3b\u6570\u636e tx_table\u3002\n    \u5bf9\u5c3e\u90e8\u6b8b\u4f59\u6bd4\u7279\u6309\u540c\u4e00\u6a21\u5f0f\u622a\u53d6\uff0c\u5f97\u5230 rem_punc_bits\u3002\n    \u5c06\u4e3b\u6570\u636e\u548c\u6b8b\u4f59\u6570\u636e\u62fc\u63a5\u6210\u6700\u7ec8\u5220\u4f59\u6bd4\u7279 punctured_bits\u3002\n\n    Args:\n        in_bits (np.ndarray): \u8f93\u5165\u6bd4\u7279\u5e8f\u5217\n        code_rate (str): \u7801\u7387\u9009\u62e9 ('R1/2', 'R2/3', 'R3/4')\n    Returns:\n        np.ndarray: \u5220\u4f59\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n\n    # \u83b7\u53d6\u5220\u4f59\u6a21\u5f0f\u548c\u7a97\u53e3\u5927\u5c0f\n    punc_patt, punc_patt_size = get_punc_params(code_rate)\n    num_rem_bits = len(in_bits) % punc_patt_size\n\n    # \u4e3b\u6570\u636e\u5206\u7ec4\u5220\u4f59\n    main_bits = in_bits[:len(in_bits)-num_rem_bits]\n    puncture_table = main_bits.reshape((-1, punc_patt_size)).T\n    tx_table = puncture_table[punc_patt-1, :]  # MATLAB\u7d22\u5f15\u4ece1\u5f00\u59cb\uff0cPython\u4ece0\u5f00\u59cb\n\n    # \u5269\u4f59\u6bd4\u7279\u5220\u4f59\n    rem_bits = in_bits[len(in_bits)-num_rem_bits:]\n    rem_punc_patt = np.where(punc_patt &lt;= num_rem_bits)[0]\n    rem_punc_bits = rem_bits[rem_punc_patt]\n\n    # \u62fc\u63a5\u8f93\u51fa\n    punctured_bits = np.concatenate([tx_table.T.flatten(), rem_punc_bits])\n    return punctured_bits\n</code></pre> Matlab<pre><code>% puncturing\u5220\u4f59\u7f16\u7801\n\nfunction punctured_bits = tx_puncture(in_bits, code_rate)\n\n[punc_patt, punc_patt_size] = get_punc_params(code_rate);\n  % R=3/4 punc_patt=[1 2 3 6]; punc_patt_size = 6;\n% Remainder bits are the bits in the end of the packet that are not integer multiple of the puncture window size\n% \u5269\u4f59\u6bd4\u7279\u662f\u5206\u7ec4\u672b\u5c3e\u7684\u6bd4\u7279\uff0c\u5b83\u4eec\u4e0d\u662f\u5220\u4f59\u7a97\u53e3\u5927\u5c0f\u7684\u6574\u6570\u500d\nnum_rem_bits = rem(length(in_bits), punc_patt_size);%rem\u53d6\u4f59\uff0c\u628a\u4f59\u4e0b\u7684bit\u5355\u72ec\u8fd0\u7b97\n\npuncture_table = reshape(in_bits(1:length(in_bits)-num_rem_bits), punc_patt_size, fix(length(in_bits)/punc_patt_size));\n%\u6309punc_patt_siz\u5206\u7ec4\ntx_table = puncture_table(punc_patt,:);\n%\u6309punc_patt\u5f97\u5230\u5220\u4f59\u540e\u6570\u636e\n\n%puncture the remainder bits  \u5220\u4f59\u5269\u4f59\u7684\u6bd4\u7279\nrem_bits = in_bits(length(in_bits)-num_rem_bits+1:length(in_bits));\nrem_punc_patt = find(punc_patt&lt;=num_rem_bits);\nrem_bits = rem_bits(rem_punc_patt,:);%\u81ea\u884c\u6dfb\u52a0\nrem_punc_bits = rem_bits( )';\n\npunctured_bits = [tx_table(:)' rem_punc_bits];\n</code></pre>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#ofdm","title":"\u751f\u6210OFDM\u7b26\u53f7","text":"<p>\u6839\u636e\u8c03\u5236\u9636\u6570\u83b7\u5f97</p> \u66f4\u6539\u540e\u6e90\u4ee3\u7801 Python<pre><code>def get_bits_per_symbol(mod_order: str) -&gt; int:\n    \"\"\"\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u83b7\u53d6\u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u6570\n\n    Args:\n        mod_order (str): \u8c03\u5236\u65b9\u5f0f ('BPSK', 'QPSK', '16QAM', '64QAM')\n    Returns:\n        int: \u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u6570\n    \"\"\"\n\n    mod_order = mod_order.strip().upper()\n    if mod_order == 'BPSK':\n        return 1\n    elif mod_order == 'QPSK':\n        return 2\n    elif mod_order == '16QAM':\n        return 4\n    elif mod_order == '64QAM':\n        return 6\n    else:\n        raise ValueError('\u672a\u5b9a\u4e49\u7684\u8c03\u5236\u65b9\u5f0f')\n</code></pre> Matlab<pre><code>function num_bits = get_bits_per_symbol(mod_order)\n\nif ~isempty(strmatch(mod_order, 'BPSK ','exact'))\n  num_bits=1;\nelseif ~isempty(strmatch(mod_order, 'QPSK ','exact'))\n  num_bits=2;\nelseif ~isempty(strmatch(mod_order, '16QAM','exact'))\n  num_bits=4;\nelseif ~isempty(strmatch(mod_order, '64QAM','exact'))\n  num_bits=6;\nelse\n  error('Undefined modulation');\nend\n</code></pre> <p>\u8ba1\u7b97\u5f53\u524d\u6570\u636e\u53ef\u4ee5\u751f\u6210\u591a\u5c11OFDM\u7b26\u53f7\uff0c\u5982\u679c\u53d1\u5c04\u5206\u96c6\u8981\u4fdd\u8bc1\u7b26\u53f7\u6570\u4e3a\u5076\u6570\uff0c\u786e\u5b9a\u586b\u5145\u7684bit\u8fdb\u884c\u586b\u5145</p> \u66f4\u6539\u540e\u6e90\u4ee3\u7801 Python<pre><code>def tx_make_int_num_ofdm_syms(tx_bits, para: Para):\n    \"\"\"\u751f\u6210\u6574\u6570\u4e2aOFDM\u7b26\u53f7\u7684\u6bd4\u7279\u5e8f\u5217\u51fd\u6570\n\n    \u8ba1\u7b97\u9700\u8981\u7684OFDM\u7b26\u53f7\u6570\uff0c\u786e\u4fdd\u6570\u636e\u6bd4\u7279\u6570\u80fd\u586b\u6ee1\u6574\u6570\u4e2aOFDM\u7b26\u53f7\u3002\n    \u5982\u679c\u542f\u7528\u53d1\u5c04\u5206\u96c6\u4e14OFDM\u7b26\u53f7\u6570\u4e3a\u5947\u6570\uff0c\u5219\u589e\u52a0\u4e00\u4e2aOFDM\u7b26\u53f7\u4ee5\u786e\u4fdd\u7b26\u53f7\u6570\u4e3a\u5076\u6570\u3002\n    \u8ba1\u7b97\u9700\u8981\u586b\u5145\u7684\u6bd4\u7279\u6570\uff0c\u5e76\u751f\u6210\u968f\u673a\u586b\u5145\u6bd4\u7279\u3002\n    \u5c06\u539f\u59cb\u6bd4\u7279\u5e8f\u5217\u4e0e\u586b\u5145\u6bd4\u7279\u62fc\u63a5\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u6bd4\u7279\u5e8f\u5217\u3002\n\n    Args:\n        tx_bits (np.ndarray): \u8f93\u5165\u6bd4\u7279\u5e8f\u5217\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n    Returns:\n        np.ndarray: \u586b\u5145\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n    sim_consts = para.sim_consts\n    sim_options = para.ui_options\n\n    n_tx_bits = len(tx_bits)\n    n_syms = sim_consts.NumDataSubc\n    n_bits_per_sym = get_bits_per_symbol(sim_options.Modulation)\n\n    # \u8ba1\u7b97\u9700\u8981\u7684OFDM\u7b26\u53f7\u6570\n    n_ofdm_syms = int(np.ceil(n_tx_bits / (n_syms * n_bits_per_sym)))\n\n    # Radon Hurwitz\u53d8\u6362\u9700\u8981\u5076\u6570\u4e2aOFDM\u7b26\u53f7\n    if sim_options.UseTxDiversity:\n        if n_ofdm_syms % 2 != 0:\n            n_ofdm_syms += 1\n\n    pad_len = n_ofdm_syms * n_syms * n_bits_per_sym - n_tx_bits\n    pad_bits = np.random.randint(0, 2, pad_len) # \u968f\u673a\u751f\u6210{0,1}\u586b\u5145\u6bd4\u7279\n    out_bits = np.concatenate([tx_bits, pad_bits])\n    return out_bits\n</code></pre> Matlab<pre><code>function out_bits = tx_make_int_num_ofdm_syms(tx_bits, sim_options)%tx_bits\u662f\u5220\u4f59\u540e\u7684\u6570\u636e\n\nglobal sim_consts;\n\nn_tx_bits = length(tx_bits);\n\nn_syms = sim_consts.NumDataSubc;%48\nn_bits_per_sym = get_bits_per_symbol(sim_options.Modulation);%1,2,4,6\nn_ofdm_syms = ceil(n_tx_bits/(n_syms*n_bits_per_sym));\n\n% if Radon Hurwitz transform is used we need an even number of OFDM symbols\n%\u5982\u679c\u4f7f\u7528Radon Hurwitz\u53d8\u6362\uff0c\u6211\u4eec\u9700\u8981\u5076\u6570\u4e2aOFDM\u7b26\u53f7\nif sim_options.UseTxDiv\n  if rem(n_ofdm_syms,2) ~= 0\n      n_ofdm_syms = n_ofdm_syms + 1;\n  end\nend\n\npad_bits = randn(1, n_ofdm_syms*n_syms*n_bits_per_sym - n_tx_bits) &gt; 0;\nout_bits = [tx_bits  pad_bits];\n</code></pre>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_7","title":"\u9a8c\u8bc1","text":"","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#pythonmat","title":"python\u8bfb\u53d6mat\u6587\u4ef6","text":"Bash<pre><code>pip install scipy\n</code></pre> Python<pre><code>import scipy.io as sio\n\n# \u8bfb\u53d6MAT\u6587\u4ef6\nmat_data = sio.loadmat('src/dat/inputdat.mat')\n\n# \u6253\u5370\u6570\u636e\u5185\u5bb9\nprint(mat_data['inf_bits'])\n</code></pre>","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"blog/2025/10/06/80211a%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_8","title":"\u5377\u79ef\u7f16\u7801\u540e","text":"2025-10-07 06:23:112025-10-07 06:23:11","tags":["\u901a\u4fe1\u7cfb\u7edf","802.11a"]},{"location":"includes/abbr/","title":"Abbr","text":"2025-10-04 13:03:022025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/test/","title":"Test","text":"2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.Para","title":"<code>Para</code>","text":"<p>\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 <code>ui_options(SimOptions)</code> <p>\u7528\u6237\u754c\u9762\u8f93\u5165\u7684\u4eff\u771f\u53c2\u6570\uff08SimOptions\u5bf9\u8c61\uff09</p> <code>sim_consts</code> <code>SimConst</code> <p>\u4eff\u771f\u5e38\u91cf\uff08SimConst\u5bf9\u8c61\uff09</p> Source code in <code>src/mymain.py</code> Python<pre><code>class Para:\n    \"\"\"\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\n\n    Attributes:\n        ui_options(SimOptions): \u7528\u6237\u754c\u9762\u8f93\u5165\u7684\u4eff\u771f\u53c2\u6570\uff08SimOptions\u5bf9\u8c61\uff09\n        sim_consts (SimConst): \u4eff\u771f\u5e38\u91cf\uff08SimConst\u5bf9\u8c61\uff09\n    \"\"\"\n\n    def __init__(self, ui_options:SimOptions, sim_consts:SimConst):\n        self.ui_options = ui_options\n        self.sim_consts = sim_consts\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.SimConst","title":"<code>SimConst</code>","text":"<p>\u4eff\u771f\u5e38\u91cf\u7c7b.</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 <code>SampFreq</code> <code>float</code> <p>\u91c7\u6837\u9891\u7387 (Hz)\u3002</p> <code>ConvCodeGenPoly</code> <code>ndarray</code> <p>\u5377\u79ef\u7f16\u7801\u751f\u6210\u591a\u9879\u5f0f (2x7 \u6570\u7ec4)\u3002</p> <code>NumSubc</code> <code>int</code> <p>\u5b50\u8f7d\u6ce2\u6570\u91cf\u3002</p> <code>UsedSubcIdx</code> <code>ndarray</code> <p>\u6709\u6548\u5b50\u8f7d\u6ce2\u7d22\u5f15\u3002</p> <code>ShortTrainingSymbols</code> <code>ndarray</code> <p>\u77ed\u8bad\u7ec3\u7b26\u53f7\u5e8f\u5217\u3002</p> <code>LongTrainingSymbols</code> <code>ndarray</code> <p>\u957f\u8bad\u7ec3\u7b26\u53f7\u5e8f\u5217\u3002</p> <code>ExtraNoiseSamples</code> <code>int</code> <p>\u989d\u5916\u566a\u58f0\u6837\u672c\u6570\u3002</p> <code>PilotScramble</code> <code>ndarray</code> <p>\u5bfc\u9891\u52a0\u6270\u5e8f\u5217\u3002</p> <code>NumDataSubc</code> <code>int</code> <p>\u6570\u636e\u5b50\u8f7d\u6ce2\u6570\u91cf\u3002</p> <code>NumPilotSubc</code> <code>int</code> <p>\u5bfc\u9891\u5b50\u8f7d\u6ce2\u6570\u91cf\u3002</p> <code>DataSubcIdx</code> <code>ndarray</code> <p>\u6570\u636e\u5b50\u8f7d\u6ce2\u7d22\u5f15\u3002</p> <code>PilotSubcIdx</code> <code>ndarray</code> <p>\u5bfc\u9891\u5b50\u8f7d\u6ce2\u7d22\u5f15\u3002</p> <code>PilotSubcPatt</code> <code>ndarray</code> <p>\u5bfc\u9891\u5b50\u8f7d\u6ce2\u6a21\u5f0f\u3002</p> <code>DataSubcPatt</code> <code>ndarray</code> <p>\u6570\u636e\u5b50\u8f7d\u6ce2\u6a21\u5f0f\u3002</p> <code>PilotSubcSymbols</code> <code>ndarray</code> <p>\u5bfc\u9891\u7b26\u53f7\u5e8f\u5217\u3002</p> Source code in <code>src/mymain.py</code> Python<pre><code>class SimConst:\n    \"\"\"\u4eff\u771f\u5e38\u91cf\u7c7b.\n\n    Attributes:\n        SampFreq (float): \u91c7\u6837\u9891\u7387 (Hz)\u3002\n        ConvCodeGenPoly (np.ndarray): \u5377\u79ef\u7f16\u7801\u751f\u6210\u591a\u9879\u5f0f (2x7 \u6570\u7ec4)\u3002\n        NumSubc (int): \u5b50\u8f7d\u6ce2\u6570\u91cf\u3002\n        UsedSubcIdx (np.ndarray): \u6709\u6548\u5b50\u8f7d\u6ce2\u7d22\u5f15\u3002\n        ShortTrainingSymbols (np.ndarray): \u77ed\u8bad\u7ec3\u7b26\u53f7\u5e8f\u5217\u3002\n        LongTrainingSymbols (np.ndarray): \u957f\u8bad\u7ec3\u7b26\u53f7\u5e8f\u5217\u3002\n        ExtraNoiseSamples (int): \u989d\u5916\u566a\u58f0\u6837\u672c\u6570\u3002\n        PilotScramble (np.ndarray): \u5bfc\u9891\u52a0\u6270\u5e8f\u5217\u3002\n        NumDataSubc (int): \u6570\u636e\u5b50\u8f7d\u6ce2\u6570\u91cf\u3002\n        NumPilotSubc (int): \u5bfc\u9891\u5b50\u8f7d\u6ce2\u6570\u91cf\u3002\n        DataSubcIdx (np.ndarray): \u6570\u636e\u5b50\u8f7d\u6ce2\u7d22\u5f15\u3002\n        PilotSubcIdx (np.ndarray): \u5bfc\u9891\u5b50\u8f7d\u6ce2\u7d22\u5f15\u3002\n        PilotSubcPatt (np.ndarray): \u5bfc\u9891\u5b50\u8f7d\u6ce2\u6a21\u5f0f\u3002\n        DataSubcPatt (np.ndarray): \u6570\u636e\u5b50\u8f7d\u6ce2\u6a21\u5f0f\u3002\n        PilotSubcSymbols (np.ndarray): \u5bfc\u9891\u7b26\u53f7\u5e8f\u5217\u3002\n    \"\"\"\n\n    def __init__(self):\n        self.SampFreq = 20e6  # \u91c7\u6837\u9891\u7387\n        self.ConvCodeGenPoly = np.array([[1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1]])  # \u5377\u79ef\u7f16\u7801\u751f\u6210\u591a\u9879\u5f0f\n        self.NumSubc = 52\n        self.UsedSubcIdx = np.concatenate((np.arange(7, 33), np.arange(34, 60)))  # MATLAB\u7d22\u5f15\u662f\u95ed\u533a\u95f4\n        self.ShortTrainingSymbols = np.sqrt(13/6) * np.array([\n            0, 0, 1+1j, 0, 0, 0, -1-1j, 0, 0, 0, 1+1j, 0, 0, 0, -1-1j, 0, 0, 0, -1-1j, 0, 0, 0, 1+1j, 0, 0, 0,\n            0, 0, 0, -1-1j, 0, 0, 0, -1-1j, 0, 0, 0, 1+1j, 0, 0, 0, 1+1j, 0, 0, 0, 1+1j, 0, 0, 0, 1+1j, 0, 0\n        ])\n        self.LongTrainingSymbols = np.array([\n            1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1,\n            1, -1, -1, 1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1\n        ])\n        self.ExtraNoiseSamples = 500\n        self.PilotScramble = np.array([\n            1, 1, 1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, 1, 1, 1,\n            1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, 1, 1, 1, 1, -1, -1, 1,\n            1, -1, -1, 1, -1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, -1, 1, -1, 1, -1, 1, -1,\n            -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1\n        ])\n        self.NumDataSubc = 48\n        self.NumPilotSubc = 4\n        self.DataSubcIdx = np.concatenate((np.arange(7, 12), np.arange(13, 26), np.arange(27, 33), np.arange(34, 40), np.arange(41, 54), np.arange(55, 60)))\n        self.PilotSubcIdx = np.array([12, 26, 40, 54])\n        self.PilotSubcPatt = np.array([6, 20, 33, 47])\n        self.DataSubcPatt = np.concatenate((np.arange(1, 6), np.arange(7, 20), np.arange(21, 27), np.arange(27, 33), np.arange(34, 47), np.arange(48, 53)))\n        self.PilotSubcSymbols = np.array([1, 1, 1, -1])\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.SimOptions","title":"<code>SimOptions</code>  <code>dataclass</code>","text":"<p>\u4eff\u771f\u53c2\u6570\u7c7b</p> <p>\u5c5e\u6027\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 <code>PktLen</code> <code>int</code> <p>\u5305\u957f\u5ea6\u53d8\u91cf\uff08\u5b57\u8282\uff09</p> <code>ConvCodeRate</code> <code>str</code> <p>\u5377\u79ef\u7801\u7387\u53d8\u91cf</p> <code>InterleaveBits</code> <code>bool</code> <p>\u4ea4\u7ec7\u6df1\u5ea6\u53d8\u91cf</p> <code>Modulation</code> <code>str</code> <p>\u8c03\u5236\u65b9\u5f0f\u53d8\u91cf</p> <code>UseTxDiversity</code> <code>bool</code> <p>\u53d1\u5c04\u5206\u96c6\u53d8\u91cf</p> <code>UseRxDiversity</code> <code>int</code> <p>\u63a5\u6536\u5206\u96c6\u53d8\u91cf</p> <code>FreqError</code> <code>int</code> <p>\u9891\u7387\u8bef\u5dee\u53d8\u91cf</p> <code>ChannelModel</code> <code>str</code> <p>\u4fe1\u9053\u6a21\u578b\u53d8\u91cf</p> <code>ExpDecayTrms</code> <code>float</code> <p>\u6307\u6570\u8870\u51cf\u53c2\u6570\u53d8\u91cf</p> <code>SNR</code> <code>float</code> <p>\u4fe1\u566a\u6bd4\u53d8\u91cf</p> <code>UseTxPA</code> <code>int</code> <p>\u529f\u653e\u53d8\u91cf</p> <code>UsePhaseNoise</code> <code>int</code> <p>\u76f8\u4f4d\u566a\u58f0\u53d8\u91cf</p> <code>PhaseNoiseDbcLevel</code> <code>float</code> <p>\u76f8\u4f4d\u566a\u58f0dBc\u53d8\u91cf</p> <code>PhaseNoiseCornerFreq</code> <code>float</code> <p>\u76f8\u4f4d\u566a\u58f0\u62d0\u70b9\u9891\u7387\u53d8\u91cf</p> <code>PhaseNoiseFloor</code> <code>float</code> <p>\u76f8\u4f4d\u566a\u58f0\u5e95\u566a\u53d8\u91cf</p> <code>PacketDetection</code> <code>int</code> <p>\u5305\u68c0\u6d4b\u53d8\u91cf</p> <code>TxSpectrumShape</code> <code>int</code> <p>\u53d1\u5c04\u529f\u7387\u8c31\u6d4b\u8bd5\u53d8\u91cf</p> <code>FineTimeSync</code> <code>int</code> <p>\u7cbe\u7ec6\u65f6\u95f4\u540c\u6b65\u53d8\u91cf</p> <code>FreqSync</code> <code>int</code> <p>\u9891\u7387\u540c\u6b65\u53d8\u91cf</p> <code>PilotPhaseTrack</code> <code>int</code> <p>\u5bfc\u9891\u76f8\u4f4d\u8ddf\u8e2a\u53d8\u91cf</p> <code>ChannelEst</code> <code>int</code> <p>\u4fe1\u9053\u4f30\u8ba1\u53d8\u91cf</p> <code>RxTimingOffset</code> <code>int</code> <p>\u63a5\u6536\u5b9a\u65f6\u504f\u79fb\u53d8\u91cf</p> <code>PktsToSimulate</code> <code>int</code> <p>\u4eff\u771f\u5305\u6570\u53d8\u91cf</p> Source code in <code>src/mymain.py</code> Python<pre><code>@dataclass\nclass SimOptions:\n    \"\"\"\u4eff\u771f\u53c2\u6570\u7c7b\n\n    Attributes:\n        PktLen (int): \u5305\u957f\u5ea6\u53d8\u91cf\uff08\u5b57\u8282\uff09\n        ConvCodeRate (str): \u5377\u79ef\u7801\u7387\u53d8\u91cf\n        InterleaveBits (bool): \u4ea4\u7ec7\u6df1\u5ea6\u53d8\u91cf\n        Modulation (str): \u8c03\u5236\u65b9\u5f0f\u53d8\u91cf\n        UseTxDiversity (bool): \u53d1\u5c04\u5206\u96c6\u53d8\u91cf\n        UseRxDiversity (int): \u63a5\u6536\u5206\u96c6\u53d8\u91cf\n        FreqError (int): \u9891\u7387\u8bef\u5dee\u53d8\u91cf\n        ChannelModel (str): \u4fe1\u9053\u6a21\u578b\u53d8\u91cf\n        ExpDecayTrms (float): \u6307\u6570\u8870\u51cf\u53c2\u6570\u53d8\u91cf\n        SNR (float): \u4fe1\u566a\u6bd4\u53d8\u91cf\n        UseTxPA (int): \u529f\u653e\u53d8\u91cf\n        UsePhaseNoise (int): \u76f8\u4f4d\u566a\u58f0\u53d8\u91cf\n        PhaseNoiseDbcLevel (float): \u76f8\u4f4d\u566a\u58f0dBc\u53d8\u91cf\n        PhaseNoiseCornerFreq (float): \u76f8\u4f4d\u566a\u58f0\u62d0\u70b9\u9891\u7387\u53d8\u91cf\n        PhaseNoiseFloor (float): \u76f8\u4f4d\u566a\u58f0\u5e95\u566a\u53d8\u91cf\n        PacketDetection (int): \u5305\u68c0\u6d4b\u53d8\u91cf\n        TxSpectrumShape (int): \u53d1\u5c04\u529f\u7387\u8c31\u6d4b\u8bd5\u53d8\u91cf\n        FineTimeSync (int): \u7cbe\u7ec6\u65f6\u95f4\u540c\u6b65\u53d8\u91cf\n        FreqSync (int): \u9891\u7387\u540c\u6b65\u53d8\u91cf\n        PilotPhaseTrack (int): \u5bfc\u9891\u76f8\u4f4d\u8ddf\u8e2a\u53d8\u91cf\n        ChannelEst (int): \u4fe1\u9053\u4f30\u8ba1\u53d8\u91cf\n        RxTimingOffset (int): \u63a5\u6536\u5b9a\u65f6\u504f\u79fb\u53d8\u91cf\n        PktsToSimulate (int): \u4eff\u771f\u5305\u6570\u53d8\u91cf\n    \"\"\"\n\n    PktLen: int # \u5305\u957f\u5ea6\u53d8\u91cf\uff08\u5b57\u8282\uff09\n    ConvCodeRate: int # \u5377\u79ef\u7801\u7387\u53d8\u91cf\n    InterleaveBits: int # \u4ea4\u7ec7\u6df1\u5ea6\u53d8\u91cf\n    Modulation: int # \u8c03\u5236\u65b9\u5f0f\u53d8\u91cf\n    UseTxDiversity: int # \u53d1\u5c04\u5206\u96c6\u53d8\u91cf\n    UseRxDiversity: int # \u63a5\u6536\u5206\u96c6\u53d8\u91cf\n    FreqError: int # \u9891\u7387\u8bef\u5dee\u53d8\u91cf\n    ChannelModel: int # \u4fe1\u9053\u6a21\u578b\u53d8\u91cf\n    ExpDecayTrms: int # \u6307\u6570\u8870\u51cf\u53c2\u6570\u53d8\u91cf\n    SNR: int # \u4fe1\u566a\u6bd4\u53d8\u91cf\n    UseTxPA: int # \u529f\u653e\u53d8\u91cf\n    UsePhaseNoise: int # \u76f8\u4f4d\u566a\u58f0\u53d8\u91cf\n    PhaseNoiseDbcLevel: int # \u76f8\u4f4d\u566a\u58f0dBc\u53d8\u91cf\n    PhaseNoiseCornerFreq: int # \u76f8\u4f4d\u566a\u58f0\u62d0\u70b9\u9891\u7387\u53d8\u91cf\n    PhaseNoiseFloor: int # \u76f8\u4f4d\u566a\u58f0\u5e95\u566a\u53d8\u91cf\n    PacketDetection: int # \u5305\u68c0\u6d4b\u53d8\u91cf\n    TxSpectrumShape: int # \u53d1\u5c04\u529f\u7387\u8c31\u6d4b\u8bd5\u53d8\u91cf\n    FineTimeSync: int # \u7cbe\u7ec6\u65f6\u95f4\u540c\u6b65\u53d8\u91cf\n    FreqSync: int # \u9891\u7387\u540c\u6b65\u53d8\u91cf\n    PilotPhaseTrack: int # \u5bfc\u9891\u76f8\u4f4d\u8ddf\u8e2a\u53d8\u91cf\n    ChannelEst: int # \u4fe1\u9053\u4f30\u8ba1\u53d8\u91cf\n    RxTimingOffset: int # \u63a5\u6536\u5b9a\u65f6\u504f\u79fb\u53d8\u91cf\n    PktsToSimulate: int # \u4eff\u771f\u5305\u6570\u53d8\u91cf\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.build_field","title":"<code>build_field(root, fields)</code>","text":"<p>\u6784\u5efa\u8f93\u5165\u63a7\u4ef6</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>root</code> <code>Tk</code> <p>\u4e3b\u7a97\u53e3</p> \u5fc5\u9700 <code>fields</code> <code>list</code> <p>\u63a7\u4ef6\u5217\u8868\uff0c\u5305\u542b\u6807\u7b7e\u548c\u53d8\u91cf</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def build_field(root, fields):\n    \"\"\"\u6784\u5efa\u8f93\u5165\u63a7\u4ef6\n\n    Args:\n        root (tk.Tk): \u4e3b\u7a97\u53e3\n        fields (list): \u63a7\u4ef6\u5217\u8868\uff0c\u5305\u542b\u6807\u7b7e\u548c\u53d8\u91cf\n    \"\"\"\n\n    # \u5e03\u5c40\u63a7\u4ef6\n    num_per_col = (len(fields) + 1) // 2  # \u6bcf\u5217\u663e\u793a\u7684\u884c\u6570\n    for i, (label, var) in enumerate(fields):\n        col = 0 if i &lt; num_per_col else 2\n        row = i if i &lt; num_per_col else i - num_per_col\n        tk.Label(root, text=label).grid(row=row+1, column=col, sticky='e', padx=5, pady=2)\n\n        # \u7279\u6b8a\u5904\u7406\n        if(label==\"\u7f16\u7801\u7387\"):\n            combo=ttk.Combobox(root,textvariable=var,state='readonly')\n            combo['values']=('R1/2','R2/3','R3/4')\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2)\n            combo.current(0)\n        elif(label==\"\u8c03\u5236\u65b9\u5f0f\"):\n            combo=ttk.Combobox(root,textvariable=var,state='readonly')\n            combo['values']=('BPSK','QPSK','16QAM','64QAM')\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2)\n            combo.current(0)\n        elif(label==\"\u5206\u96c6\u53d1\u5c04\"):\n            combo=ttk.Radiobutton(root,text=\"\u662f\",variable=var,value=1)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='w')\n            combo=ttk.Radiobutton(root,text=\"\u5426\",variable=var,value=0)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='e')\n            var.set(0)\n        elif(label==\"\u4ea4\u7ec7\u6bd4\u7279\"):\n            combo=ttk.Radiobutton(root,text=\"\u662f\",variable=var,value=1)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='w')\n            combo=ttk.Radiobutton(root,text=\"\u5426\",variable=var,value=0)\n            combo.grid(row=row+1, column=col+1, padx=5, pady=2, sticky='e')\n            var.set(1)\n        else:\n            tk.Entry(root, textvariable=var).grid(row=row+1, column=col+1, padx=5, pady=2)\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.convolutional_encode","title":"<code>convolutional_encode(data_bits, para)</code>","text":"<p>\u5377\u79ef\u7f16\u7801\u51fd\u6570</p> <ol> <li>\u5377\u79ef\u540e\u957f\u5ea6 = \u751f\u6210\u591a\u9879\u5f0f\u957f\u5ea6 + \u8f93\u5165\u6bd4\u7279\u6570 - 1</li> <li>\u6570\u636e\u5206\u522b\u4e0e\u591a\u9879\u5f0f\u5377\u79ef\uff0c\u540c\u65f6\u6a21\u4e8c\u8ba1\u7b97</li> <li>\u7ed3\u679c\u6309\u5217\u5c55\u5f00\u540e\u8f93\u51fa</li> </ol> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>data_bits</code> <code>ndarray</code> <p>\u8f93\u5165\u6570\u636e\u6bd4\u7279\u5e8f\u5217</p> \u5fc5\u9700 <code>para</code> <code>Para</code> <p>\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ndarray</code> <p>\u5377\u79ef\u7f16\u7801\u540e\u7684\u6bd4\u7279\u5e8f\u5217</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def convolutional_encode(data_bits, para:Para)-&gt; np.ndarray:\n    \"\"\"\u5377\u79ef\u7f16\u7801\u51fd\u6570\n\n    1. \u5377\u79ef\u540e\u957f\u5ea6 = \u751f\u6210\u591a\u9879\u5f0f\u957f\u5ea6 + \u8f93\u5165\u6bd4\u7279\u6570 - 1\n    2. \u6570\u636e\u5206\u522b\u4e0e\u591a\u9879\u5f0f\u5377\u79ef\uff0c\u540c\u65f6\u6a21\u4e8c\u8ba1\u7b97\n    3. \u7ed3\u679c\u6309\u5217\u5c55\u5f00\u540e\u8f93\u51fa\n\n    Args:\n        data_bits (np.ndarray): \u8f93\u5165\u6570\u636e\u6bd4\u7279\u5e8f\u5217\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n\n    Returns:\n        \u5377\u79ef\u7f16\u7801\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n\n    poly = para.sim_consts.ConvCodeGenPoly\n    number_rows = poly.shape[0]\n    number_bits = poly.shape[1] + len(data_bits) - 1\n    uncoded_bits = np.zeros((number_rows, number_bits), dtype=int)\n    for row in range(number_rows):\n        conv_result = np.convolve(data_bits, poly[row])\n        uncoded_bits[row, :] = np.mod(conv_result, 2)\n    # \u6309\u5217\u5c55\u5f00\n    coded_bits = uncoded_bits.T.flatten()\n    return coded_bits\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.get_bits_per_symbol","title":"<code>get_bits_per_symbol(mod_order)</code>","text":"<p>\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u83b7\u53d6\u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u6570</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>mod_order</code> <code>str</code> <p>\u8c03\u5236\u65b9\u5f0f ('BPSK', 'QPSK', '16QAM', '64QAM')</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>int</code> <p>\u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u6570</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def get_bits_per_symbol(mod_order: str) -&gt; int:\n    \"\"\"\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u83b7\u53d6\u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u6570\n\n    Args:\n        mod_order (str): \u8c03\u5236\u65b9\u5f0f ('BPSK', 'QPSK', '16QAM', '64QAM')\n\n    Returns:\n        \u6bcf\u4e2a\u7b26\u53f7\u7684\u6bd4\u7279\u6570\n    \"\"\"\n\n    mod_order = mod_order.strip().upper()\n    if mod_order == 'BPSK':\n        return 1\n    elif mod_order == 'QPSK':\n        return 2\n    elif mod_order == '16QAM':\n        return 4\n    elif mod_order == '64QAM':\n        return 6\n    else:\n        raise ValueError('\u672a\u5b9a\u4e49\u7684\u8c03\u5236\u65b9\u5f0f')\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.get_punc_params","title":"<code>get_punc_params(code_rate)</code>","text":"<p>\u83b7\u53d6\u5220\u4f59\u53c2\u6570\u51fd\u6570</p> <p>Note</p> <p>\u6839\u636e\u7801\u7387\u9009\u62e9\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4\u548c\u7a97\u53e3\u5927\u5c0f\u3002</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>code_rate</code> <code>str</code> <p>\u7801\u7387\u9009\u62e9 ('R\u00bd', 'R\u2154', 'R\u00be')</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ndarray</code> <p>\u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4</p> <code>int</code> <p>\u7a97\u53e3\u5927\u5c0f\u6570\u7ec4</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def get_punc_params(code_rate)-&gt; tuple[np.ndarray, int]:\n    \"\"\"\u83b7\u53d6\u5220\u4f59\u53c2\u6570\u51fd\u6570\n\n    Note:\n        \u6839\u636e\u7801\u7387\u9009\u62e9\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4\u548c\u7a97\u53e3\u5927\u5c0f\u3002\n\n    Args:\n        code_rate (str): \u7801\u7387\u9009\u62e9 ('R1/2', 'R2/3', 'R3/4')\n\n    Returns:\n        \u5220\u4f59\u4f4d\u7f6e\u6570\u7ec4\n        \u7a97\u53e3\u5927\u5c0f\u6570\u7ec4\n    \"\"\"\n\n    if code_rate == 'R3/4':\n        # R = 3/4\uff0c\u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 x x 6]\uff0cx =\u5220\u4f59\n        punc_patt = np.array([1, 2, 3, 6])# \u5220\u9664\u540e\u4f59\u4e0b\u7684\u4f4d\u7f6e\n        punc_patt_size = 6# \u4e00\u7ec4\u7684\u6570\u91cf\n    elif code_rate == 'R2/3':\n        # % R=2/3, \u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 x], x = \u5220\u4f59\n        punc_patt = np.array([1, 2, 3])\n        punc_patt_size = 4\n    elif code_rate == 'R1/2':\n        # R=1/2, \u5220\u4f59\u6a21\u5f0f\uff1a[1 2 3 4 5 6], x = \u5220\u4f59 \n        punc_patt = np.array([1, 2, 3, 4, 5, 6])\n        punc_patt_size = 6\n    else:\n        raise ValueError('\u672a\u5b9a\u4e49\u7684\u7f16\u7801\u7387')\n    return punc_patt, punc_patt_size\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.runsim","title":"<code>runsim(para)</code>","text":"<p>\u8fd0\u884c\u4eff\u771f Args:     para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def runsim(para: Para):\n    \"\"\"\u8fd0\u884c\u4eff\u771f\n    Args:\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n    \"\"\"\n\n    print(\"\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\\n\")\n    packet_count = 0\n    while packet_count&lt;para.ui_options.PktsToSimulate:\n        packet_count += 1\n        single_packet(para)\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.single_packet","title":"<code>single_packet(para)</code>","text":"<p>\u5355\u5305\u4eff\u771f\u51fd\u6570 Args:     para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def single_packet(para: Para):\n    \"\"\"\u5355\u5305\u4eff\u771f\u51fd\u6570\n    Args:\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n    \"\"\"\n\n    # \u751f\u6210\u53d1\u9001\u6570\u636e\n    transmitter(para)\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.transmitter","title":"<code>transmitter(para)</code>","text":"<p>\u53d1\u5c04\u673a\u5904\u7406\u51fd\u6570</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>para</code> <code>Para</code> <p>\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def transmitter(para:Para):\n    \"\"\"\u53d1\u5c04\u673a\u5904\u7406\u51fd\u6570\n\n    Args:\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n    \"\"\"\n\n    # \u751f\u6210\u6570\u636e\n    # data_bits = np.random.randint(0, 2, para.ui_options.PktLen)\n\n    # \u8bfb\u53d6MAT\u6587\u4ef6\n    mat_data = sio.loadmat('src/dat/inputdat.mat')\n    data_bits = mat_data['inf_bits'].flatten()\n\n    # \u5377\u79ef\u7f16\u7801\n    coded_bits = convolutional_encode(data_bits, para)\n\n    # \u5220\u4f59\n    tx_bits = tx_puncture(coded_bits, para.ui_options.ConvCodeRate)\n\n    # \u751f\u6210\u6570\u5b57\u4f4d\n    rdy_to_mod_bits = tx_make_int_num_ofdm_syms(tx_bits, para)\n\n    # \u4ea4\u7ec7\u586b\u5145\u6bd4\u7279\n    rdy_to_mod_bits = tx_interleaver(rdy_to_mod_bits, para)\n\n    # \u8c03\u5236\n    mod_syms = tx_modulate(rdy_to_mod_bits, para.ui_options.Modulation)\n\n    # \u4f20\u8f93\u5206\u96c6\n    mod_syms = tx_diversity(mod_syms, para.ui_options)\n\n    # \u6dfb\u52a0\u5bfc\u9891\u7b26\u53f7\n    if para.ui_options.UseTxDiversity == 0:\n        mod_ofdm_syms = tx_add_pilot_syms(mod_syms, para.ui_options)\n    else:\n        mod_ofdm_syms = np.zeros_like(mod_syms)\n        mod_ofdm_syms[0, :] = tx_add_pilot_syms(mod_syms[0, :], para.ui_options)  # \u5206\u96c6\u7b2c1\u8def\n        mod_ofdm_syms[1, :] = tx_add_pilot_syms(mod_syms[1, :], para.ui_options)  # \u5206\u96c6\u7b2c2\u8def\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.tx_gen_intlvr_patt","title":"<code>tx_gen_intlvr_patt(interleaver_depth, para)</code>","text":"<p>\u751f\u6210\u5355\u4e2aOFDM\u7b26\u53f7\u7684\u4ea4\u7ec7\u6a21\u5f0f\u51fd\u6570</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>interleaver_depth</code> <code>int</code> <p>\u4ea4\u7ec7\u6df1\u5ea6</p> \u5fc5\u9700 <code>para</code> <code>Para</code> <p>\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ndarray</code> <p>\u4ea4\u7ec7\u6a21\u5f0f\u7d22\u5f15\u6570\u7ec4</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def tx_gen_intlvr_patt(interleaver_depth, para: Para)-&gt; np.ndarray:\n    \"\"\"\u751f\u6210\u5355\u4e2aOFDM\u7b26\u53f7\u7684\u4ea4\u7ec7\u6a21\u5f0f\u51fd\u6570\n\n    Args:\n        interleaver_depth (int): \u4ea4\u7ec7\u6df1\u5ea6\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n\n    Returns:\n        \u4ea4\u7ec7\u6a21\u5f0f\u7d22\u5f15\u6570\u7ec4\n    \"\"\"\n\n    sim_consts = para.sim_consts\n    n_syms_per_ofdm_sym = sim_consts.NumDataSubc\n    s = max(interleaver_depth // n_syms_per_ofdm_sym // 2, 1)\n    idx = np.arange(interleaver_depth)\n\n    # \u7b2c\u4e00\u6b21\u7f6e\u6362\n    intlvr_patt = (interleaver_depth // 16) * (idx % 16) + (idx // 16)\n\n    # \u7b2c\u4e8c\u6b21\u7f6e\u6362\n    perm_patt = s * (intlvr_patt // s) + \\\n        (intlvr_patt + interleaver_depth - (16 * intlvr_patt // interleaver_depth)) % s\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.tx_interleaver","title":"<code>tx_interleaver(in_bits, para)</code>","text":"<p>\u53d1\u5c04\u673a\u4ea4\u7ec7\u51fd\u6570</p> <p>Note</p> <p>\u5982\u679c\u542f\u7528\u4ea4\u7ec7\uff0c\u5219\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u548c\u6570\u636e\u5b50\u8f7d\u6ce2\u6570\u8ba1\u7b97\u4ea4\u7ec7\u6df1\u5ea6\u3002 \u751f\u6210\u5355\u4e2aOFDM\u7b26\u53f7\u7684\u4ea4\u7ec7\u6a21\u5f0f\uff0c\u5e76\u5c06\u5176\u6269\u5c55\u5230 \u6574\u4e2a\u6bd4\u7279\u5e8f\u5217\u3002\u5e94\u7528\u4ea4\u7ec7\u6a21\u5f0f\u91cd\u65b0\u6392\u5217\u8f93\u5165\u6bd4\u7279\uff0c\u5f97\u5230\u4ea4\u7ec7\u540e\u7684\u6bd4\u7279\u5e8f\u5217\u3002 \u5982\u679c\u672a\u542f\u7528\u4ea4\u7ec7\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8f93\u5165\u6bd4\u7279\u3002</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>in_bits</code> <code>ndarray</code> <p>\u8f93\u5165\u6bd4\u7279\u5e8f\u5217</p> \u5fc5\u9700 <code>para</code> <code>Para</code> <p>\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ndarray</code> <p>\u4ea4\u7ec7\u540e\u7684\u6bd4\u7279\u5e8f\u5217</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def tx_interleaver(in_bits, para: Para)-&gt; np.ndarray:\n    \"\"\"\u53d1\u5c04\u673a\u4ea4\u7ec7\u51fd\u6570\n\n    Note:\n        \u5982\u679c\u542f\u7528\u4ea4\u7ec7\uff0c\u5219\u6839\u636e\u8c03\u5236\u65b9\u5f0f\u548c\u6570\u636e\u5b50\u8f7d\u6ce2\u6570\u8ba1\u7b97\u4ea4\u7ec7\u6df1\u5ea6\u3002\n        \u751f\u6210\u5355\u4e2aOFDM\u7b26\u53f7\u7684\u4ea4\u7ec7\u6a21\u5f0f\uff0c\u5e76\u5c06\u5176\u6269\u5c55\u5230\n        \u6574\u4e2a\u6bd4\u7279\u5e8f\u5217\u3002\u5e94\u7528\u4ea4\u7ec7\u6a21\u5f0f\u91cd\u65b0\u6392\u5217\u8f93\u5165\u6bd4\u7279\uff0c\u5f97\u5230\u4ea4\u7ec7\u540e\u7684\u6bd4\u7279\u5e8f\u5217\u3002\n        \u5982\u679c\u672a\u542f\u7528\u4ea4\u7ec7\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8f93\u5165\u6bd4\u7279\u3002\n\n    Args:\n        in_bits (np.ndarray): \u8f93\u5165\u6bd4\u7279\u5e8f\u5217\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n\n    Returns:\n        \u4ea4\u7ec7\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n\n    sim_consts = para.sim_consts\n    sim_options = para.ui_options\n\n    if sim_options.InterleaveBits == 1:\n        interleaver_depth = sim_consts.NumDataSubc * get_bits_per_symbol(sim_options.Modulation)\n        num_symbols = len(in_bits) // interleaver_depth\n\n        # \u751f\u6210\u5355\u4e2a\u7b26\u53f7\u7684\u4ea4\u7ec7\u6a21\u5f0f\n        single_intlvr_patt = tx_gen_intlvr_patt(interleaver_depth, sim_options, sim_consts)\n\n        # \u4e3a\u6574\u4e2a\u6570\u636e\u5305\u751f\u6210\u4ea4\u7ec7\u5668\u6a21\u5f0f\n        intlvr_patt = np.tile(single_intlvr_patt, num_symbols) + \\\n                        np.repeat(np.arange(num_symbols) * interleaver_depth, interleaver_depth)\n        # \u5e94\u7528\u4ea4\u7ec7\n        interleaved_bits = np.zeros_like(in_bits)\n        interleaved_bits[intlvr_patt] = in_bits\n    else:\n        interleaved_bits = in_bits\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.tx_make_int_num_ofdm_syms","title":"<code>tx_make_int_num_ofdm_syms(tx_bits, para)</code>","text":"<p>\u751f\u6210\u6574\u6570\u4e2aOFDM\u7b26\u53f7\u7684\u6bd4\u7279\u5e8f\u5217\u51fd\u6570</p> <p>Note</p> <p>\u8ba1\u7b97\u9700\u8981\u7684OFDM\u7b26\u53f7\u6570\uff0c\u786e\u4fdd\u6570\u636e\u6bd4\u7279\u6570\u80fd\u586b\u6ee1\u6574\u6570\u4e2aOFDM\u7b26\u53f7\u3002 \u5982\u679c\u542f\u7528\u53d1\u5c04\u5206\u96c6\u4e14OFDM\u7b26\u53f7\u6570\u4e3a\u5947\u6570\uff0c\u5219\u589e\u52a0\u4e00\u4e2aOFDM\u7b26\u53f7\u4ee5\u786e\u4fdd\u7b26\u53f7\u6570\u4e3a\u5076\u6570\u3002 \u8ba1\u7b97\u9700\u8981\u586b\u5145\u7684\u6bd4\u7279\u6570\uff0c\u5e76\u751f\u6210\u968f\u673a\u586b\u5145\u6bd4\u7279\u3002 \u5c06\u539f\u59cb\u6bd4\u7279\u5e8f\u5217\u4e0e\u586b\u5145\u6bd4\u7279\u62fc\u63a5\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u6bd4\u7279\u5e8f\u5217\u3002</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>tx_bits</code> <code>ndarray</code> <p>\u8f93\u5165\u6bd4\u7279\u5e8f\u5217</p> \u5fc5\u9700 <code>para</code> <code>Para</code> <p>\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ndarray</code> <p>\u586b\u5145\u540e\u7684\u6bd4\u7279\u5e8f\u5217</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def tx_make_int_num_ofdm_syms(tx_bits, para: Para)-&gt; np.ndarray:\n    \"\"\"\u751f\u6210\u6574\u6570\u4e2aOFDM\u7b26\u53f7\u7684\u6bd4\u7279\u5e8f\u5217\u51fd\u6570\n\n    Note:\n        \u8ba1\u7b97\u9700\u8981\u7684OFDM\u7b26\u53f7\u6570\uff0c\u786e\u4fdd\u6570\u636e\u6bd4\u7279\u6570\u80fd\u586b\u6ee1\u6574\u6570\u4e2aOFDM\u7b26\u53f7\u3002\n        \u5982\u679c\u542f\u7528\u53d1\u5c04\u5206\u96c6\u4e14OFDM\u7b26\u53f7\u6570\u4e3a\u5947\u6570\uff0c\u5219\u589e\u52a0\u4e00\u4e2aOFDM\u7b26\u53f7\u4ee5\u786e\u4fdd\u7b26\u53f7\u6570\u4e3a\u5076\u6570\u3002\n        \u8ba1\u7b97\u9700\u8981\u586b\u5145\u7684\u6bd4\u7279\u6570\uff0c\u5e76\u751f\u6210\u968f\u673a\u586b\u5145\u6bd4\u7279\u3002\n        \u5c06\u539f\u59cb\u6bd4\u7279\u5e8f\u5217\u4e0e\u586b\u5145\u6bd4\u7279\u62fc\u63a5\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u6bd4\u7279\u5e8f\u5217\u3002\n\n    Args:\n        tx_bits (np.ndarray): \u8f93\u5165\u6bd4\u7279\u5e8f\u5217\n        para (Para): \u4eff\u771f\u53c2\u6570\u5c01\u88c5\u7c7b\u5bf9\u8c61\n\n    Returns:\n        \u586b\u5145\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n    sim_consts = para.sim_consts\n    sim_options = para.ui_options\n\n    n_tx_bits = len(tx_bits)\n    n_syms = sim_consts.NumDataSubc\n    n_bits_per_sym = get_bits_per_symbol(sim_options.Modulation)\n\n    # \u8ba1\u7b97\u9700\u8981\u7684OFDM\u7b26\u53f7\u6570\n    n_ofdm_syms = int(np.ceil(n_tx_bits / (n_syms * n_bits_per_sym)))\n\n    # Radon Hurwitz\u53d8\u6362\u9700\u8981\u5076\u6570\u4e2aOFDM\u7b26\u53f7\n    if sim_options.UseTxDiversity:\n        if n_ofdm_syms % 2 != 0:\n            n_ofdm_syms += 1\n\n    pad_len = n_ofdm_syms * n_syms * n_bits_per_sym - n_tx_bits\n    pad_bits = np.random.randint(0, 2, pad_len) # \u968f\u673a\u751f\u6210{0,1}\u586b\u5145\u6bd4\u7279\n    out_bits = np.concatenate([tx_bits, pad_bits])\n    return out_bits\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.tx_puncture","title":"<code>tx_puncture(in_bits, code_rate)</code>","text":"<p>\u53d1\u5c04\u673a\u5220\u4f59\u51fd\u6570</p> <p>\u4f9d\u636e\u7801\u7387\u83b7\u53d6\u5220\u4f59\u7a97\u53e3\u5927\u5c0f\u548c\u4fdd\u7559\u4f4d\u7f6e \u8ba1\u7b97\u5c3e\u90e8\u4e0d\u8db3\u4e00\u7a97\u7684\u6b8b\u4f59\u6bd4\u7279\u6570 \u5bf9\u4e3b\u6570\u636e\u6309\u7a97\u53e3\u91cd\u6392\u6210\u77e9\u9635 puncture_table\uff0c\u4ec5\u4fdd\u7559 punc_patt \u6307\u5b9a\u7684\u884c\u5f97\u5230\u5220\u4f59\u4e3b\u6570\u636e tx_table\u3002 \u5bf9\u5c3e\u90e8\u6b8b\u4f59\u6bd4\u7279\u6309\u540c\u4e00\u6a21\u5f0f\u622a\u53d6\uff0c\u5f97\u5230 rem_punc_bits\u3002 \u5c06\u4e3b\u6570\u636e\u548c\u6b8b\u4f59\u6570\u636e\u62fc\u63a5\u6210\u6700\u7ec8\u5220\u4f59\u6bd4\u7279 punctured_bits\u3002</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>in_bits</code> <code>ndarray</code> <p>\u8f93\u5165\u6bd4\u7279\u5e8f\u5217</p> \u5fc5\u9700 <code>code_rate</code> <code>str</code> <p>\u7801\u7387\u9009\u62e9 ('R\u00bd', 'R\u2154', 'R\u00be')</p> \u5fc5\u9700 <p>Returns:     \u5220\u4f59\u540e\u7684\u6bd4\u7279\u5e8f\u5217</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def tx_puncture(in_bits, code_rate)-&gt; np.ndarray:\n    \"\"\"\u53d1\u5c04\u673a\u5220\u4f59\u51fd\u6570\n\n    \u4f9d\u636e\u7801\u7387\u83b7\u53d6\u5220\u4f59\u7a97\u53e3\u5927\u5c0f\u548c\u4fdd\u7559\u4f4d\u7f6e\n    \u8ba1\u7b97\u5c3e\u90e8\u4e0d\u8db3\u4e00\u7a97\u7684\u6b8b\u4f59\u6bd4\u7279\u6570\n    \u5bf9\u4e3b\u6570\u636e\u6309\u7a97\u53e3\u91cd\u6392\u6210\u77e9\u9635 puncture_table\uff0c\u4ec5\u4fdd\u7559 punc_patt \u6307\u5b9a\u7684\u884c\u5f97\u5230\u5220\u4f59\u4e3b\u6570\u636e tx_table\u3002\n    \u5bf9\u5c3e\u90e8\u6b8b\u4f59\u6bd4\u7279\u6309\u540c\u4e00\u6a21\u5f0f\u622a\u53d6\uff0c\u5f97\u5230 rem_punc_bits\u3002\n    \u5c06\u4e3b\u6570\u636e\u548c\u6b8b\u4f59\u6570\u636e\u62fc\u63a5\u6210\u6700\u7ec8\u5220\u4f59\u6bd4\u7279 punctured_bits\u3002\n\n    Args:\n        in_bits (np.ndarray): \u8f93\u5165\u6bd4\u7279\u5e8f\u5217\n        code_rate (str): \u7801\u7387\u9009\u62e9 ('R1/2', 'R2/3', 'R3/4')\n    Returns:\n        \u5220\u4f59\u540e\u7684\u6bd4\u7279\u5e8f\u5217\n    \"\"\"\n\n    # \u83b7\u53d6\u5220\u4f59\u6a21\u5f0f\u548c\u7a97\u53e3\u5927\u5c0f\n    punc_patt, punc_patt_size = get_punc_params(code_rate)\n    num_rem_bits = len(in_bits) % punc_patt_size\n\n    # \u4e3b\u6570\u636e\u5206\u7ec4\u5220\u4f59\n    main_bits = in_bits[:len(in_bits)-num_rem_bits]\n    puncture_table = main_bits.reshape((-1, punc_patt_size)).T\n    tx_table = puncture_table[punc_patt-1, :]  # MATLAB\u7d22\u5f15\u4ece1\u5f00\u59cb\uff0cPython\u4ece0\u5f00\u59cb\n\n    # \u5269\u4f59\u6bd4\u7279\u5220\u4f59\n    rem_bits = in_bits[len(in_bits)-num_rem_bits:]\n    rem_punc_patt = np.where(punc_patt &lt;= num_rem_bits)[0]\n    rem_punc_bits = rem_bits[rem_punc_patt]\n\n    # \u62fc\u63a5\u8f93\u51fa\n    punctured_bits = np.concatenate([tx_table.T.flatten(), rem_punc_bits])\n    return punctured_bits\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/test/#mymain.ui_read_options","title":"<code>ui_read_options()</code>","text":"<p>\u521b\u5efaGUI\u754c\u9762\uff0c\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u4eff\u771f\u53c2\u6570</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>SimOptions</code> <p>\u7528\u6237\u8f93\u5165\u7684\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u5728SimOptions\u5bf9\u8c61\u4e2d</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/mymain.py</code> Python<pre><code>def ui_read_options()-&gt; SimOptions:\n    \"\"\"\u521b\u5efaGUI\u754c\u9762\uff0c\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u4eff\u771f\u53c2\u6570\n\n    Returns:\n        \u7528\u6237\u8f93\u5165\u7684\u4eff\u771f\u53c2\u6570\u5c01\u88c5\u5728SimOptions\u5bf9\u8c61\u4e2d\n    \"\"\"\n    # \u521b\u5efa\u7a97\u53e3\n    root = tk.Tk()\n    root.title(\"\u4eff\u771f\u53c2\u6570\u8bbe\u7f6e\")\n\n    # \u6807\u5934\n    header=tk.Frame(root).grid(row=0, column=0, columnspan=4, sticky='nswe', pady=5)\n    tk.Label(header, text=\"\u57fa802.11a\u7684\u901a\u4fe1\u7cfb\u7edf\u4eff\u771f\", font=(\"\u5fae\u8f6f\u96c5\u9ed1\", 16)).grid(row=0, column=0, columnspan=4, pady=10)\n\n    # \u521b\u5efa\u63a7\u4ef6\n    fields = [\n        (\"PktLen(\u5b57\u8282)\", tk.IntVar(value=\"100\")),\n        (\"\u7f16\u7801\u7387\", tk.StringVar()),\n        (\"\u4ea4\u7ec7\u6bd4\u7279\", tk.BooleanVar()),\n        (\"\u8c03\u5236\u65b9\u5f0f\", tk.StringVar()),\n        (\"\u5206\u96c6\u53d1\u5c04\", tk.BooleanVar()),\n        (\"UseRxDiversity\", tk.StringVar(value=\"0\")),\n        (\"FreqError\", tk.StringVar(value=\"0\")),\n        (\"ChannelModel\", tk.StringVar(value=\"AWGN\")),\n        (\"ExpDecayTrms\", tk.StringVar(value=\"0\")),\n        (\"\u4fe1\u566a\u6bd4\uff08SNR\uff09\", tk.StringVar(value=\"20\")),\n        (\"UseTxPA\", tk.StringVar(value=\"0\")),\n        (\"UsePhaseNoise\", tk.StringVar(value=\"0\")),\n        (\"PhaseNoiseDbcLevel\", tk.StringVar(value=\"0\")),\n        (\"PhaseNoiseCornerFreq\", tk.StringVar(value=\"0\")),\n        (\"PhaseNoiseFloor\", tk.StringVar(value=\"0\")),\n        (\"PacketDetection\", tk.StringVar(value=\"1\")),\n        (\"TxSpectrumShape\", tk.StringVar(value=\"0\")),\n        (\"FineTimeSync\", tk.StringVar(value=\"1\")),\n        (\"FreqSync\", tk.StringVar(value=\"1\")),\n        (\"PilotPhaseTrack\", tk.StringVar(value=\"1\")),\n        (\"ChannelEst\", tk.StringVar(value=\"1\")),\n        (\"RxTimingOffset\", tk.StringVar(value=\"0\")),\n        (\"PktsToSimulate\", tk.StringVar(value=\"100\"))\n    ]\n\n    # \u6784\u5efa\u6240\u6709\u63a7\u4ef6\n    build_field(root, fields)\n\n    # \u5f00\u59cb\u4eff\u771f\u6309\u94ae\u56de\u8c03\n    def on_start():\n        \"\"\"\u5f00\u59cb\u4eff\u771f\u6309\u94ae\u56de\u8c03\u51fd\u6570\uff0c\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u53c2\u6570\u5e76\u5173\u95ed\u7a97\u53e3\n        \"\"\"\n\n        result[\"value\"] = SimOptions(\n            PktLen=int(field_vars[\"PktLen(\u5b57\u8282)\"].get()),\n            ConvCodeRate=field_vars[\"\u7f16\u7801\u7387\"].get(),\n            InterleaveBits=field_vars[\"\u4ea4\u7ec7\u6bd4\u7279\"].get(),\n            Modulation=field_vars[\"\u8c03\u5236\u65b9\u5f0f\"].get(),\n            UseTxDiversity=field_vars[\"\u5206\u96c6\u53d1\u5c04\"].get(),\n            UseRxDiversity=int(field_vars[\"UseRxDiversity\"].get()),\n            FreqError=int(field_vars[\"FreqError\"].get()),\n            ChannelModel=field_vars[\"ChannelModel\"].get(),\n            ExpDecayTrms=float(field_vars[\"ExpDecayTrms\"].get()),\n            SNR=float(field_vars[\"\u4fe1\u566a\u6bd4\uff08SNR\uff09\"].get()),\n            UseTxPA=int(field_vars[\"UseTxPA\"].get()),\n            UsePhaseNoise=int(field_vars[\"UsePhaseNoise\"].get()),\n            PhaseNoiseDbcLevel=float(field_vars[\"PhaseNoiseDbcLevel\"].get()),\n            PhaseNoiseCornerFreq=float(field_vars[\"PhaseNoiseCornerFreq\"].get()),\n            PhaseNoiseFloor=float(field_vars[\"PhaseNoiseFloor\"].get()),\n            PacketDetection=int(field_vars[\"PacketDetection\"].get()),\n            TxSpectrumShape=int(field_vars[\"TxSpectrumShape\"].get()),\n            FineTimeSync=int(field_vars[\"FineTimeSync\"].get()),\n            FreqSync=int(field_vars[\"FreqSync\"].get()),\n            PilotPhaseTrack=int(field_vars[\"PilotPhaseTrack\"].get()),\n            ChannelEst=int(field_vars[\"ChannelEst\"].get()),\n            RxTimingOffset=int(field_vars[\"RxTimingOffset\"].get()),\n            PktsToSimulate=int(field_vars[\"PktsToSimulate\"].get())\n        )\n        root.destroy()\n\n    # \u6dfb\u52a0\u5f00\u59cb\u4eff\u771f\u6309\u94ae\n    tk.Button(root, text=\"\u4eff\u771f\u5f00\u59cb\", command=on_start).grid(\n        row=(len(fields) + 1) // 2+1, column=0, columnspan=4, sticky='we', pady=10\n    )\n\n    # \u63d0\u53d6\u53d8\u91cf\n    field_vars = {label: var for label, var in fields}\n    result: dict[str, SimOptions] = {}\n\n\n\n    root.mainloop()\n    return result[\"value\"]\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%87%BD%E6%95%B0/","title":"\u51fd\u6570","text":""},{"location":"%E6%9D%82%E9%A1%B9/%E5%87%BD%E6%95%B0/#_1","title":"\u6587\u7ae0\u5185\u5bb9","text":"2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/%E5%BC%80%E5%A7%8B/","title":"\u5f00\u59cb","text":"<p>Material for MkDocs \u662f MkDocs \u4e4b\u4e0a\u7684\u4e00\u4e2a\u5f3a\u5927\u7684\u6587\u6863\u6846\u67b6\uff0cMkDocs \u662f\u4e00\u4e2a\u7528\u4e8e\u9879\u76ee\u6587\u6863\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u30021 \u5982\u679c\u60a8\u719f\u6089 Python\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 Python \u5305\u7ba1\u7406\u5668 pip \u5b89\u88c5 Material for MkDocs\u3002\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 docker</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E5%BC%80%E5%A7%8B/#_1","title":"\u5b89\u88c5","text":"2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/%E8%B0%B7%E6%AD%8C%E9%A3%8E%E6%A0%BC%E6%B3%A8%E9%87%8A/","title":"\u8c37\u6b4c\u98ce\u683c\u6ce8\u91ca","text":""},{"location":"%E6%9D%82%E9%A1%B9/%E8%B0%B7%E6%AD%8C%E9%A3%8E%E6%A0%BC%E6%B3%A8%E9%87%8A/#_1","title":"\u57fa\u672c\u6a21\u677f","text":"Python<pre><code>\"\"\"\u8c37\u6b4c\u98ce\u683c\u6ce8\u91ca.\n\n\u8bf4\u660e1\n\nExample:\n    \u53ef\u4ee5\u4f7f\u7528\u201cExample\u201d\u6216\u201cExamples\u201d\u90e8\u5206\u6765\u63d0\u4f9b\u793a\u4f8b\u3002\u8fd9\u4e9b\u90e8\u5206\u652f\u6301\u4efb\u4f55reStructuredText\u683c\u5f0f\uff0c\u5305\u62ec\u5b57\u9762\u5757::\n\n        $ python example_google.py\n\n\u8282\u65ad\u70b9\u662f\u901a\u8fc7\u6062\u590d\u672a\u7f29\u8fdb\u7684\u6587\u672c\u521b\u5efa\u7684\u3002\u6bcf\u5f53\u65b0\u8282\u5f00\u59cb\u65f6\uff0c\u4e5f\u4f1a\u9690\u5f0f\u5730\u521b\u5efa\u8282\u65ad\u70b9\u3002\n\nAttributes:\n    \u6a21\u5757\u7ea7\u53d8\u91cf1\uff08\u6574\u578b\uff09\uff1a\u6a21\u5757\u7ea7\u53d8\u91cf\u53ef\u4ee5\u8bb0\u5f55\u5728\u6a21\u5757\u6587\u6863\u5b57\u7b26\u4e32\u7684\u201c\u5c5e\u6027\u201d\u90e8\u5206\uff0c\u4e5f\u53ef\u4ee5\u8bb0\u5f55\u5728\u53d8\u91cf\u540e\u7684\u5185\u8054\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u3002\n    \u8fd9\u4e24\u79cd\u5f62\u5f0f\u90fd\u662f\u53ef\u63a5\u53d7\u7684\uff0c\u4f46\u4e0d\u5e94\u6df7\u7528\u3002\u9009\u62e9\u4e00\u79cd\u7ea6\u5b9a\u6765\u8bb0\u5f55\u6a21\u5757\u7ea7\u53d8\u91cf\uff0c\u5e76\u4fdd\u6301\u4e00\u81f4\u6027\u3002\n\nTodo:\n    * \u5f85\u529e1\n    * \u5f85\u529e2\n\"\"\"\n</code></pre> 2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/","title":"\u901a\u4fe1\u7cfb\u7edf\u8bbe\u8ba1","text":"2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/","title":"\u5f00\u5934","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_1","title":"\u5f00\u5934","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_2","title":"\u521b\u5efa\u7f51\u7ad9","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_3","title":"\u521d\u59cb\u5316\u6587\u4ef6\u5939","text":"Bash<pre><code>mkdocs new .\n</code></pre> <p>\u53ef\u4ee5\u5f97\u5230 </p>Text Only<pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre><p></p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_4","title":"\u57fa\u672c\u914d\u7f6e","text":"YAML<pre><code>site_name: My site\nsite_url: https://mydomain.org/mysite\ntheme:\n  name: material\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#yaml","title":"YAML\u6269\u5c55","text":"<p>setting.json\u589e\u52a0 </p>JSON<pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ \n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre><p></p> <p>\u62a5\u9519\uff0c\u5c5e\u6027 keybord \u4e0d\u88ab\u5141\u8bb8\uff0c\u4f46\u662f\u7f51\u7ad9\u6b63\u5e38\u7f16\u8bd1</p> <p>\u6709\u65f6\u5019\u62a5\u66f4\u591a\u7684\u9519\u8bef</p> <p></p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_5","title":"\u5c0f\u6280\u5de7","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_6","title":"\u63d0\u793a","text":"Markdown<pre><code>!!!note \"\u63d0\u793a\"\n    \u6587\u5b57\u8bf4\u660e\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_7","title":"\u5206\u680f\u4ee3\u7801","text":"\u7b80\u4ecb\u4ee3\u7801 Markdown Markdown<pre><code>=== \":octicons-file-code-16: `docs/stylesheets/extra.css`\"\n\n    ``` css\n    @font-face {\n      font-family: \"&lt;font&gt;\";\n      src: \"...\";\n    }\n    ```\n\n=== \":octicons-file-code-16: `mkdocs.yml`\"\n\n    ``` yaml\n    extra_css:\n      - stylesheets/extra.css\n    ```\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_8","title":"\u66f4\u6539\u989c\u8272","text":"<p>\u8c37\u6b4c\u989c\u8272\u76d8</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_9","title":"\u5149\u4eae\u6a21\u5f0f\u548c\u9ed1\u6697\u6a21\u5f0f","text":"Text Only<pre><code>theme:\n  palette:\n    # scheme: slate\n    scheme: default\n</code></pre> <p>\u70b9\u51fb\u5207\u6362\u6a21\u5f0f</p> \u4ee3\u7801 JavaScript<pre><code>&lt;div class=\"mdx-switch\"&gt;\n  &lt;button data-md-color-scheme=\"default\"&gt;&lt;code&gt;default&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-scheme=\"slate\"&gt;&lt;code&gt;slate&lt;/code&gt;&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n  var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\")\n  buttons.forEach(function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.setAttribute(\"data-md-color-switching\", \"\")\n      var attr = this.getAttribute(\"data-md-color-scheme\")\n      document.body.setAttribute(\"data-md-color-scheme\", attr)\n      var name = document.querySelector(\"#__code_0 code span.l\")\n      name.textContent = attr\n      setTimeout(function() {\n        document.body.removeAttribute(\"data-md-color-switching\")\n      })\n    })\n  })\n&lt;/script&gt;\n</code></pre> <code>default</code> <code>slate</code>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_10","title":"\u57fa\u672c\u989c\u8272","text":"Text Only<pre><code>theme:\n  palette:\n    primary: indigo\n</code></pre> <p>\u70b9\u51fb\u5207\u6362\u989c\u8272</p> \u4ee3\u7801 JavaScript<pre><code>&lt;div class=\"mdx-switch\"&gt;\n  &lt;button data-md-color-primary=\"red\"&gt;&lt;code&gt;red&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"pink\"&gt;&lt;code&gt;pink&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"purple\"&gt;&lt;code&gt;purple&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"deep-purple\"&gt;&lt;code&gt;deep purple&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"indigo\"&gt;&lt;code&gt;indigo&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"blue\"&gt;&lt;code&gt;blue&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"light-blue\"&gt;&lt;code&gt;light blue&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"cyan\"&gt;&lt;code&gt;cyan&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"teal\"&gt;&lt;code&gt;teal&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"green\"&gt;&lt;code&gt;green&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"light-green\"&gt;&lt;code&gt;light green&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"lime\"&gt;&lt;code&gt;lime&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"yellow\"&gt;&lt;code&gt;yellow&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"amber\"&gt;&lt;code&gt;amber&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"orange\"&gt;&lt;code&gt;orange&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"deep-orange\"&gt;&lt;code&gt;deep orange&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"brown\"&gt;&lt;code&gt;brown&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"grey\"&gt;&lt;code&gt;grey&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"blue-grey\"&gt;&lt;code&gt;blue grey&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"black\"&gt;&lt;code&gt;black&lt;/code&gt;&lt;/button&gt;\n  &lt;button data-md-color-primary=\"white\"&gt;&lt;code&gt;white&lt;/code&gt;&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n  var buttons = document.querySelectorAll(\"button[data-md-color-primary]\")\n  buttons.forEach(function(button) {\n    button.addEventListener(\"click\", function() {\n      var attr = this.getAttribute(\"data-md-color-primary\")\n      document.body.setAttribute(\"data-md-color-primary\", attr)\n      var name = document.querySelector(\"#__code_1 code span.l\")\n      name.textContent = attr.replace(\"-\", \" \")\n    })\n  })\n&lt;/script&gt;\n</code></pre> <code>red</code> <code>pink</code> <code>purple</code> <code>deep purple</code> <code>indigo</code> <code>blue</code> <code>light blue</code> <code>cyan</code> <code>teal</code> <code>green</code> <code>light green</code> <code>lime</code> <code>yellow</code> <code>amber</code> <code>orange</code> <code>deep orange</code> <code>brown</code> <code>grey</code> <code>blue grey</code> <code>black</code> <code>white</code>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_11","title":"\u989c\u8272\u5207\u6362","text":"Text Only<pre><code>theme:\n  palette: \n\n    # Palette toggle for light mode\n    - scheme: default\n      toggle:\n        icon: material/brightness-7 \n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#icon","title":"icon\u5c5e\u6027","text":"<p>\u5207\u6362\u952e\u524d\u540e\u56fe\u6807</p> <ul> <li> +  \u2013 <code>material/brightness-7</code> + <code>material/brightness-4</code></li> <li> +  \u2013 <code>material/toggle-switch</code> + <code>material/toggle-switch-off-outline</code></li> <li> +  \u2013 <code>material/weather-night</code> + <code>material/weather-sunny</code></li> <li> +  \u2013 <code>material/eye</code> + <code>material/eye-outline</code></li> <li> +  \u2013 <code>material/lightbulb</code> + <code>material/lightbulb-outline</code></li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#name","title":"name\u5c5e\u6027","text":"<p>\u4e3b\u8981\u7528\u4e8e\u63d0\u793a\u7684\u4f5c\u7528\uff0c\u4efb\u610f\u547d\u540d</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_12","title":"\u5b9a\u5236","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_13","title":"\u5b9a\u5236\u989c\u8272","text":"<p>\u9996\u5148\u8bbe\u7f6e<code>custom</code>\u5c5e\u6027 </p>Text Only<pre><code>theme:\n  palette:\n    primary: custom\n</code></pre><p></p> <p>\u7f16\u5199css\u6587\u4ef6\u5e76\u5f15\u5165</p> CSS<pre><code>:root  &gt; * {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n</code></pre> Text Only<pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>\u547d\u540d\u81ea\u5b9a\u4e49\u5c5e\u6027 </p>CSS<pre><code>[data-md-color-scheme=\"youtube\"] {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n</code></pre><p></p> Text Only<pre><code>theme:\n  palette:\n    scheme: youtube\nextra_css:\n  - stylesheets/extra.css\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_14","title":"\u6539\u53d8\u5b57\u4f53","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_15","title":"\u5e38\u89c4\u5b57\u4f53","text":"<p>\u53c2\u8003\u8c37\u6b4c\u5b57\u4f53</p> Text Only<pre><code>theme:\n  font:\n    text: Roboto\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_16","title":"\u7b49\u5bbd\u5b57\u4f53","text":"<p>\u7528\u4e8e\u4ee3\u7801\u5757\uff0c\u53ef\u4ee5\u5355\u72ec\u914d\u7f6e\uff0c\u53c2\u8003\u8c37\u6b4c\u5b57\u4f53 </p>Text Only<pre><code>theme:\n  font:\n    code: Roboto Mono\n</code></pre><p></p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_17","title":"\u5b9a\u5236","text":"<p>\u4f7f\u7528\u53e6\u5916\u7684\u5b57\u4f53</p> <p>\u5148\u5f15\u5165</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> CSS<pre><code>@font-face {\n  font-family: \"&lt;font&gt;\";\n  src: \"...\";\n}\n</code></pre> YAML<pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>\u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528</p> Regular fontMonospaced font CSS<pre><code>:root {\n  --md-text-font: \"&lt;font&gt;\"; /* (1)! */\n}\n</code></pre> CSS<pre><code>:root {\n  --md-code-font: \"&lt;font&gt;\";\n}\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#iconlogo","title":"\u66f4\u6539icon\u548clogo","text":"Text Only<pre><code>theme:\n  logo: assets/logo.png\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_18","title":"\u6269\u5c55","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_19","title":"\u7f29\u5199","text":"<p>\u542f\u7528 </p>Text Only<pre><code>markdown_extensions:\n  - abbr\n</code></pre> \u7528\u6cd5<p></p> Markdown<pre><code>The HTML specification is maintained by the W3C.\n\n*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_20","title":"\u672f\u8bed\u8868","text":"<code>docs/includes/abbr.md</code> <code>mkdocs.yml</code> CSS<pre><code>*[HTML]: Hyper Text Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> YAML<pre><code>markdown_extensions:\n- pymdownx.snippets:\n    auto_append:\n      - docs/includes/abbr.md\n</code></pre> <p>\u6ce8\u610f</p> <p>\u7f29\u5199\u8bcd\u524d\u540e\u9700\u8981\u52a0\u4e0a\u7a7a\u683c</p> <p>\u7f29\u5199\u8bcd\u6d4b\u8bd5\uff0c HTML5 </p> <p>\u7f29\u5199\u8bcd\u6d4b\u8bd5\uff0c CSS </p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_21","title":"\u535a\u5ba2","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_22","title":"\u6a21\u677f","text":"\u76ee\u5f55\u4ee3\u7801 Markdown<pre><code>docs\n\u251c\u2500\u2500 blog\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 posts\n\u2514\u2500\u2500 index.md\n</code></pre> Markdown<pre><code>---\ndate:\n  created: 2023-12-31\n---\n\n# \u6807\u9898\n\n\u6458\u8981\n&lt;!-- more --&gt;\n\n\u6b63\u6587\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_23","title":"\u66f4\u65b0\u6587\u7ae0","text":"Markdown<pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\n---\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_24","title":"\u7f6e\u9876","text":"Markdown<pre><code>---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\npin: true\n---\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_25","title":"\u94fe\u63a5","text":"Markdown<pre><code>---\ndate:\n  created: 2023-12-31\n...\nlinks:\n  - index.md\n  - blog/index.md\n---\n</code></pre> <p>\u81ea\u5b9a\u4e49\u6807\u9898</p> Markdown<pre><code>---\ndate:\n  created: 2023-12-31\n...\nlinks:\n  - Homepage: index.md\n  - Blog index: blog/index.md\n  - External links:\n    - Material documentation: https://squidfunk.github.io/mkdocs-material\n---\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_26","title":"\u9a8c\u8bc1","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/material%E7%94%A8%E6%B3%95/#_27","title":"\u4e2d\u6587\u641c\u7d22\u652f\u6301","text":"Text Only<pre><code>pip install jieba\n</code></pre> YAML<pre><code>plugins:\n  - search:\n      separator: '[\\s\\u200b\\-]'\n</code></pre> 2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/mkdocs%E9%85%8D%E7%BD%AE/","title":"\u6b22\u8fce\u6765\u5230mkdoc","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/mkdocs%E9%85%8D%E7%BD%AE/#mkdoc","title":"\u6b22\u8fce\u6765\u5230mkdoc","text":"<p>\u5b8c\u6574\u6587\u6863\u8bf7\u8bbf\u95ee mkdocs.org\u3002</p> <p>\u672c\u5730\u9884\u89c8\u7f51\u5740\uff1ahttp://127.0.0.1:8000/</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/mkdocs%E9%85%8D%E7%BD%AE/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":"<ul> <li><code>mkdocs new [\u76ee\u5f55\u540d]</code> - \u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\u3002</li> <li><code>mkdocs serve</code> - \u542f\u52a8\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u670d\u52a1\u5668\u3002</li> <li><code>mkdocs build</code> - \u6784\u5efa\u6587\u6863\u7f51\u7ad9\u3002</li> <li><code>mkdocs -h</code> - \u663e\u793a\u5e2e\u52a9\u4fe1\u606f\u5e76\u9000\u51fa\u3002</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/mkdocs%E9%85%8D%E7%BD%AE/#_2","title":"\u9879\u76ee\u7ed3\u6784","text":"Text Only<pre><code>mkdocs.yml    # \u914d\u7f6e\u6587\u4ef6\ndocs/\n    index.md  # \u6587\u6863\u9996\u9875\n    ...       # \u5176\u4ed6 Markdown \u9875\u9762\u3001\u56fe\u7247\u53ca\u5176\u4ed6\u6587\u4ef6\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/mkdocs%E9%85%8D%E7%BD%AE/#_3","title":"\u914d\u7f6e\u9875\u9762\u5bfc\u822a","text":"Text Only<pre><code>nav:\n  - Home: index.md\n  - User Guide:\n    - Writing your docs: writing-your-docs.md\n    - Styling your docs: styling-your-docs.md\n  - About:\n    - License: license.md\n    - Release Notes: release-notes.md\n</code></pre> 2025-10-07 06:23:112025-10-07 06:23:11"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/","title":"\u53c2\u8003","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_1","title":"\u9875\u9762\u57fa\u672c\u8bbe\u7f6e","text":"Markdown<pre><code>---\ntitle: \u9875\u9762\u6807\u9898\ndescription: \u9875\u9762\u63cf\u8ff0\nicon: material/emoticon-happy \nsubtitle: \u526f\u6807\u9898\nstatus: new\n---\n</code></pre> <p>status\u6709\u4ee5\u4e0b\u57fa\u672c\u6807\u8bc6\u7b26</p> <ul> <li> \u2013 <code>new</code></li> <li> \u2013 <code>deprecated</code></li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_2","title":"\u8b66\u544a","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_3","title":"\u542f\u7528","text":"YAML<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_4","title":"\u66f4\u6539\u8b66\u544a\u56fe\u6807","text":"YAML<pre><code>theme:\n  icon:\n    admonition:\n      &lt;type&gt;: &lt;icon&gt;\n</code></pre>  Octicons FontAwesome YAML<pre><code>theme:\n    icon:\n    admonition:\n        note: octicons/tag-16\n        abstract: octicons/checklist-16\n        info: octicons/info-16\n        tip: octicons/squirrel-16\n        success: octicons/check-16\n        question: octicons/question-16\n        warning: octicons/alert-16\n        failure: octicons/x-circle-16\n        danger: octicons/zap-16\n        bug: octicons/bug-16\n        example: octicons/beaker-16\n        quote: octicons/quote-16\n</code></pre> YAML<pre><code>theme:\n    icon:\n    admonition:\n        note: fontawesome/solid/note-sticky\n        abstract: fontawesome/solid/book\n        info: fontawesome/solid/circle-info\n        tip: fontawesome/solid/bullhorn\n        success: fontawesome/solid/check\n        question: fontawesome/solid/circle-question\n        warning: fontawesome/solid/triangle-exclamation\n        failure: fontawesome/solid/bomb\n        danger: fontawesome/solid/skull\n        bug: fontawesome/solid/robot\n        example: fontawesome/solid/flask\n        quote: fontawesome/solid/quote-left\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_5","title":"\u76f4\u63a5\u4f7f\u7528","text":"Markdown<pre><code>!!! note\n\n    \u8bf4\u660e\n</code></pre> <p>Note</p> <p>\u8bf4\u660e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_6","title":"\u81ea\u5b9a\u4e49\u6807\u9898","text":"Markdown<pre><code>!!! note \"\u6807\u9898\"\n\n    \u8bf4\u660e\n</code></pre> <p>\u6807\u9898</p> <p>\u8bf4\u660e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_7","title":"\u5d4c\u5957","text":"Markdown<pre><code>!!! note \"\u6807\u98981\"\n\n    \u8bf4\u660e1\n\n    !!! note \"\u6807\u98982\"\n\n        \u8bf4\u660e2\n</code></pre> <p>\u6807\u98981</p> <p>\u8bf4\u660e1</p> <p>\u6807\u98982</p> <p>\u8bf4\u660e2</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_8","title":"\u65e0\u6807\u9898","text":"Markdown<pre><code>!!! note \"\"\n\n    \u8bf4\u660e\n</code></pre> <p>\u8bf4\u660e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_9","title":"\u53ef\u6298\u53e0","text":"Note <p>\u8bf4\u660e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_10","title":"\u5185\u8054","text":"\u5185\u8054\u53f3 \u5185\u8054 <p>\u6807\u9898</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! info inline end \"\u6807\u9898\"\n\n    \u8bf4\u660e\n</code></pre> <p>\u6807\u9898</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! info inline \"\u6807\u9898\"\n\n    \u8bf4\u660e\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_11","title":"\u652f\u6301\u7684\u7c7b\u578b","text":"Markdown<pre><code>!!! note\n\n    \u8bf4\u660e\n</code></pre> <p>Note</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! abstract\n\n    \u8bf4\u660e\n</code></pre> <p>Abstract</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! info\n\n    \u8bf4\u660e\n</code></pre> <p>Info</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! tip\n\n    \u8bf4\u660e\n</code></pre> <p>Tip</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! success\n\n    \u8bf4\u660e\n</code></pre> <p>Success</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! question\n\n    \u8bf4\u660e\n</code></pre> <p>Question</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! warning\n\n    \u8bf4\u660e\n</code></pre> <p>Warning</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! failure\n\n    \u8bf4\u660e\n</code></pre> <p>Failure</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! danger\n\n    \u8bf4\u660e\n</code></pre> <p>Danger</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! bug\n\n    \u8bf4\u660e\n</code></pre> <p>Bug</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! example\n\n    \u8bf4\u660e\n</code></pre> <p>Example</p> <p>\u8bf4\u660e</p> Markdown<pre><code>!!! quote\n\n    \u8bf4\u660e\n</code></pre> <p>Quote</p> <p>\u8bf4\u660e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_12","title":"\u9644\u6ce8","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_13","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.superfences\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_14","title":"\u66f4\u6539\u6ce8\u91ca\u56fe\u6807","text":"YAML<pre><code>theme:\n  icon:\n    annotation: material/arrow-right-circle\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_15","title":"\u5e38\u7528\u9009\u62e9","text":"Markdown<pre><code>- :material-plus-circle: - `material/plus-circle`\n- :material-circle-medium: - `material/circle-medium`\n- :material-record-circle: - `material/record-circle`\n- :material-arrow-right-circle: - `material/arrow-right-circle`\n- :material-arrow-right-circle-outline: - `material/arrow-right-circle-outline`\n- :material-chevron-right-circle: - `material/chevron-right-circle`\n- :material-star-four-points-circle: - `material/star-four-points-circle`\n- :material-plus-circle-outline: - `material/plus-circle-outline`\n</code></pre> <ul> <li> - <code>material/plus-circle</code></li> <li> - <code>material/circle-medium</code></li> <li> - <code>material/record-circle</code></li> <li> - <code>material/arrow-right-circle</code></li> <li> - <code>material/arrow-right-circle-outline</code></li> <li> - <code>material/chevron-right-circle</code></li> <li> - <code>material/star-four-points-circle</code></li> <li> - <code>material/plus-circle-outline</code></li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_16","title":"\u6ce8\u91ca","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_17","title":"\u5c5e\u6027\u5217\u8868","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_18","title":"\u4f7f\u7528","text":"YAML<pre><code>markdown_extensions:\n  - attr_list\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_19","title":"\u6ce8\u91ca","text":"Markdown<pre><code>\u8fd9\u662f\u4e00\u4e32\u6587\u5b57 (1) \u8fd9\u662f\u7b2c\u4e8c\u4e32\u6587\u5b57\n{ .annotate }\n\n1. \u8fd9\u662f\u6ce8\u91ca\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e32\u6587\u5b57(1)\u8fd9\u662f\u7b2c\u4e8c\u4e32\u6587\u5b57</p> <ol> <li>\u8fd9\u662f\u6ce8\u91ca</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_20","title":"\u5d4c\u5957\u6ce8\u91ca","text":"<p>\u7b2c\u4e00\u4e32\u6587\u5b57 (1) \u7b2c\u4e8c\u4e32\u6587\u5b57</p> <ol> <li> <p> \u6ce8\u91ca1 (1)</p> <ol> <li> \u6ce8\u91ca2!</li> </ol> </li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_21","title":"\u8b66\u544a\u4e2d\u6ce8\u91ca","text":"Markdown<pre><code>!!! note annotate \"\u6807\u9898 (1)\"\n\n    \u5185\u5bb91 (2) \u5185\u5bb92\n\n1. \u6807\u9898\u6ce8\u91ca\n2. \u5185\u5bb9\u6ce8\u91ca\n</code></pre> <p>\u6807\u9898 (1)</p> <p>\u5185\u5bb91 (2) \u5185\u5bb92</p> <ol> <li>\u6807\u9898\u6ce8\u91ca</li> <li>\u5185\u5bb9\u6ce8\u91ca</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_22","title":"\u5185\u5bb9\u9009\u9879\u5361\u4e2d\u6ce8\u91ca","text":"Markdown<pre><code>=== \"\u9875\u97621\"\n\n    \u5185\u5bb91 (1) \u5185\u5bb9\n    { .annotate }\n\n    1. \u6ce8\u91ca1\n\n=== \"\u9875\u97622\"\n\n    \u5185\u5bb92 (1)\n    { .annotate }\n\n    1. \u6ce8\u91ca2\n</code></pre> \u9875\u97621\u9875\u97622 <p>\u5185\u5bb91 (1) \u5185\u5bb9</p> <ol> <li>\u6ce8\u91ca1</li> </ol> <p>\u5185\u5bb92 (1)</p> <ol> <li>\u6ce8\u91ca2</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#html","title":"HTML\u65b9\u5f0f\u4f7f\u7528\u5c5e\u6027\u5217\u8868","text":"Markdown<pre><code>&lt;div class=\"annotate\" markdown&gt;\n\u5185\u5bb91 (1) \u5185\u5bb92\n&lt;/div&gt;\n\n1. \u6ce8\u91ca\n</code></pre> <p>\u5185\u5bb91 (1) \u5185\u5bb92</p> <ol> <li>\u6ce8\u91ca</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#md","title":"md\u6ce8\u91ca\u5d4c\u5957","text":"<p>````\u5d4c\u5957```</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_23","title":"\u6309\u94ae","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_24","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - attr_list\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_25","title":"\u6dfb\u52a0\u6309\u94ae","text":"<p>\u8ba2\u9605</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_26","title":"\u6dfb\u52a0\u4e3b\u6309\u94ae","text":"<p>\u6dfb\u52a0\u6309\u94ae\u7684\u540c\u65f6\u4e5f\u52a0\u5165\u4e86\u7c7b\u9009\u62e9\u5668</p> <p>Subscribe to our newsletter</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_27","title":"\u6dfb\u52a0\u56fe\u6807\u6309\u94ae","text":"<p>Send </p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_28","title":"\u4ee3\u7801\u5757","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_29","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_30","title":"\u4ee3\u7801\u590d\u5236","text":"YAML<pre><code>theme:\n  features:\n    - content.code.copy\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_31","title":"\u4ee3\u7801\u9009\u62e9","text":"YAML<pre><code>theme:\n  features:\n    - content.code.select\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_32","title":"\u6dfb\u52a0\u6807\u9898","text":"\u4ee3\u7801<pre><code>``` py title=\"bubble_sort.py\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_33","title":"\u6dfb\u52a0\u884c\u53f7","text":"\u4ee3\u7801<pre><code>``` py linenums=\"1\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> Python<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> \u884c\u9009\u62e9\u884c\u8303\u56f4\u9009\u62e9 \u884c\u9009\u62e9\u9ad8\u4eae<pre><code>``` py hl_lines=\"2 3\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> Python<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> \u884c\u8303\u56f4\u9009\u62e9\u9ad8\u4eae<pre><code>``` py hl_lines=\"3-5\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> Python<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_34","title":"\u5185\u8054\u4ee3\u7801\u5757","text":"Markdown<pre><code>\u5185\u8054\u4ee3\u7801\u5757 `#!python range()` \u5185\u8054\u4ee3\u7801\u5757\n</code></pre> <p>\u5185\u8054\u4ee3\u7801\u5757 <code>range()</code> \u5185\u8054\u4ee3\u7801\u5757</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_35","title":"\u5d4c\u5165\u5916\u90e8\u4ee3\u7801\u6587\u4ef6","text":"Markdown<pre><code>``` title=\"requirements.txt\"\nmkdocs\nmkdocs-material\nmkdocs-blogging-plugin\nmkdocstrings[python]\nmkdocs-glightbox\n# mkdocs-statistics-plugin\nmkdocs-document-dates\n```\n</code></pre> requirements.txt<pre><code>mkdocs\nmkdocs-material\nmkdocs-blogging-plugin\nmkdocstrings[python]\nmkdocs-glightbox\n# mkdocs-statistics-plugin\nmkdocs-document-dates\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_36","title":"\u5185\u5bb9\u9009\u9879\u5361","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_37","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_38","title":"\u540c\u540d\u7edf\u4e00\u5207\u6362","text":"CC++ C<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <p>\u7b2c\u4e8c\u6bb5\u4ee3\u7801</p> CC++ C<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_39","title":"\u4ee3\u7801\u5757\u5206\u7ec4","text":"\u4ee3\u7801\u5757\u5206\u7ec4<pre><code>=== \"C\"\n\n    ``` c\n    #include &lt;stdio.h&gt;\n\n    int main(void) {\n      printf(\"Hello world!\\n\");\n      return 0;\n    }\n    ```\n\n=== \"C++\"\n\n    ``` c++\n    #include &lt;iostream&gt;\n\n    int main(void) {\n      std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n      return 0;\n    }\n    ```\n</code></pre> CC++ C<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> \u5176\u4ed6\u5185\u5bb9\u5206\u7ec4<pre><code>=== \"\u65e0\u5e8f\u8868\"\n\n    * \u5185\u5bb91\n    * \u5185\u5bb92\n    * \u5185\u5bb93\n\n=== \"\u6709\u5e8f\u8868\"\n\n    1. \u5185\u5bb91\n    2. \u5185\u5bb92\n    3. \u5185\u5bb93\n</code></pre> \u65e0\u5e8f\u8868\u6709\u5e8f\u8868 <ul> <li>\u5185\u5bb91</li> <li>\u5185\u5bb92</li> <li>\u5185\u5bb93</li> </ul> <ol> <li>\u5185\u5bb91</li> <li>\u5185\u5bb92</li> <li>\u5185\u5bb93</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_40","title":"\u5d4c\u5957\u5185\u5bb9","text":"<p>Example</p> \u65e0\u5e8f\u8868\u6709\u5e8f\u8868 <ul> <li>\u5185\u5bb91</li> <li>\u5185\u5bb92</li> <li>\u5185\u5bb93</li> </ul> <ol> <li>\u5185\u5bb91</li> <li>\u5185\u5bb92</li> <li>\u5185\u5bb93</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_41","title":"\u6570\u636e\u8868","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_42","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - tables\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_43","title":"\u4f7f\u7528","text":"<p>\u53ef\u4ee5\u52a0\u4e0a\u56fe\u6807</p> \u65b9\u6cd5 \u63cf\u8ff0 <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_44","title":"\u5bf9\u9f50","text":"\u5de6\u5bf9\u9f50\u5c45\u4e2d\u53f3\u5bf9\u9f50 Text Only<pre><code>| \u65b9\u6cd5        | \u63cf\u8ff0                          |\n| :---------- | :----------------------------------- |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> \u65b9\u6cd5 \u63cf\u8ff0 <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Text Only<pre><code>| \u65b9\u6cd5        | \u63cf\u8ff0                          |\n| :---------: | :----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> \u65b9\u6cd5 \u63cf\u8ff0 <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource Text Only<pre><code>| \u65b9\u6cd5        | \u63cf\u8ff0                          |\n| ----------: | -----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n</code></pre> \u65b9\u6cd5 \u63cf\u8ff0 <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_45","title":"\u56fe","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_46","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_47","title":"\u7528\u6cd5\uff08\u6d41\u7a0b\u56fe\uff09","text":"\u6d41\u7a0b\u56fe<pre><code>``` mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_48","title":"\u5e8f\u5217\u56fe","text":"\u5e8f\u5217\u56fe<pre><code>``` mermaid\nsequenceDiagram\n    autonumber\n    &lt;!-- \u7b80\u5355\u4ea4\u4e92 --&gt;\n    \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u6700\u8fd1\u8fc7\u5f97\u600e\u4e48\u6837\uff1f\n    \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u6211\u5f88\u597d\uff0c\u8c22\u8c22\uff01\n\n    &lt;!-- \u5faa\u73af --&gt;\n    \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u4f60\u6700\u8fd1\u597d\u5417\uff1f\n    loop \u6bcf\u5929\u95ee\u4e00\u6b21\n        \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u6211\u5f88\u597d\uff01\n    end\n\n    &lt;!-- \u6761\u4ef6 --&gt;\n    \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u6700\u8fd1\u8eab\u4f53\u600e\u4e48\u6837\uff1f\n    alt \u8eab\u4f53\u5065\u5eb7\n        \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u611f\u89c9\u5f88\u597d\uff01\n    else \u8eab\u4f53\u62b1\u6059\n        \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u6709\u70b9\u4e0d\u8212\u670d\u3002\n    end\n\n    &lt;!-- \u5e76\u884c --&gt;\n    par \u5f20\u4e09\u5bf9\u674e\u56db\u8bf4\u8bdd\n        \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u4f60\u597d\uff01\n    and \u5f20\u4e09\u5bf9\u738b\u4e94\u8bf4\u8bdd\n        \u5f20\u4e09-&gt;&gt;\u738b\u4e94: \u6700\u8fd1\u597d\u5417\uff1f\n    end\n```\n</code></pre> <pre><code>sequenceDiagram\n    autonumber\n    \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u6700\u8fd1\u8fc7\u5f97\u600e\u4e48\u6837\uff1f\n    \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u6211\u5f88\u597d\uff0c\u8c22\u8c22\uff01\n\n    \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u4f60\u6700\u8fd1\u597d\u5417\uff1f\n    loop \u6bcf\u5929\u95ee\u4e00\u6b21\n        \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u6211\u5f88\u597d\uff01\n    end\n\n    \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u6700\u8fd1\u8eab\u4f53\u600e\u4e48\u6837\uff1f\n    alt \u8eab\u4f53\u5065\u5eb7\n        \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u611f\u89c9\u5f88\u597d\uff01\n    else \u8eab\u4f53\u62b1\u6059\n        \u674e\u56db--&gt;&gt;\u5f20\u4e09: \u6709\u70b9\u4e0d\u8212\u670d\u3002\n    end\n\n    par \u5f20\u4e09\u5bf9\u674e\u56db\u8bf4\u8bdd\n        \u5f20\u4e09-&gt;&gt;\u674e\u56db: \u4f60\u597d\uff01\n    and \u5f20\u4e09\u5bf9\u738b\u4e94\u8bf4\u8bdd\n        \u5f20\u4e09-&gt;&gt;\u738b\u4e94: \u6700\u8fd1\u597d\u5417\uff1f\n    end</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_49","title":"\u72b6\u6001\u56fe","text":"\u72b6\u6001\u56fe<pre><code>``` mermaid\nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre> \u72b6\u6001\u56fe<pre><code>``` mermaid\nstateDiagram-v2\n    [*] --&gt; \u7ec4\u54081\n    state \u7ec4\u54081 {\n        [*] --&gt; second\n        second --&gt; [*]\n    }\n\n    [*] --&gt; NamedComposite\n    NamedComposite: \u53e6\u4e00\u4e2a\u7ec4\u5408\u72b6\u6001\n    state NamedComposite {\n        [*] --&gt; namedSimple\n        namedSimple --&gt; [*]\n        namedSimple: \u53e6\u4e00\u4e2a\u7b80\u5355\u72b6\u6001\n    }\n```\n</code></pre> <pre><code>stateDiagram-v2\n    [*] --&gt; \u7ec4\u54081\n    state \u7ec4\u54081 {\n        [*] --&gt; second\n        second --&gt; [*]\n    }\n\n    [*] --&gt; NamedComposite\n    NamedComposite: \u53e6\u4e00\u4e2a\u7ec4\u5408\u72b6\u6001\n    state NamedComposite {\n        [*] --&gt; namedSimple\n        namedSimple --&gt; [*]\n        namedSimple: \u53e6\u4e00\u4e2a\u7b80\u5355\u72b6\u6001\n    }</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_50","title":"\u7c7b\u56fe","text":"<pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()\n  }</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_51","title":"\u811a\u6ce8","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_52","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - footnotes\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_53","title":"\u4f7f\u7528","text":"<p>\u5185\u5bb91<sup>1</sup>\u5185\u5bb92<sup>2</sup></p> <p>\u811a\u6ce8\u9ed8\u8ba4\u653e\u5728\u9875\u9762\u6700\u540e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_54","title":"\u683c\u5f0f","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_55","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#critic","title":"critic\u7528\u6cd5","text":"<p>\u6587\u672c\u53ef\u4ee5 {--\u5220\u9664--} \u6216\u8005\u6587\u672c {++\u6dfb\u52a0++}. \u4e5f\u53ef\u4ee5\u8fd9\u6837\u7ec4\u5408 {\u4e00~&gt;\u4e00\u4e2a} \u5904\u7406. {\u5f3a\u8c03} \u4e5f\u53ef\u4ee5\u5b9e\u73b0 {&gt;&gt;\u5185\u8054\u6ce8\u91ca&lt;&lt;}.</p> <p>{==</p> <p>\u6587\u672c\u5757</p> <p>==}</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#caretmarktilde","title":"caret\uff0cmark\uff0ctilde\u7528\u6cd5","text":"Markdown<pre><code>- ==\u9ad8\u4eae (highlight)==\n- ^^\u4e0b\u5212\u7ebf (underline)^^\n- {~~\u5220\u9664 (strikethrough)~~}\n</code></pre> <ul> <li>\u9ad8\u4eae (highlight)</li> <li>\u4e0b\u5212\u7ebf (underline)</li> <li>\u5220\u9664 (strikethrough)</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_56","title":"\u4e0a\u4e0b\u6807","text":"Markdown<pre><code>- H~2~O\n- A^T^A\n</code></pre> <ul> <li>H<sub>2</sub>O</li> <li>A<sup>T</sup>A</li> </ul> <p>\u6ca1\u5565\u7528\u8fd8\u662f<code>&lt;sub&gt;</code>\uff0c<code>&lt;sup&gt;</code>\u597d\u7528</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_57","title":"\u952e\u76d8\u6309\u952e","text":"<p>Ctrl+Alt+Del</p> <p>\u53c2\u8003\u7f51\u7ad9</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_58","title":"\u7f51\u683c","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_59","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions: \n  - attr_list\n  - md_in_html\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_60","title":"\u7528\u6cd5","text":"<p>\u5305\u542b\u5361\u7247\u7f51\u683c\u4ee5\u53ca\u901a\u7528\u7f51\u683c</p> <ul> <li>\u5361\u7247\u7f51\u683c\uff1a\u5c06\u6bcf\u4e2a\u5143\u7d20\u5305\u88f9\u5728\u60ac\u505c\u65f6\u60ac\u6d6e\u7684\u5361\u7247\u4e2d</li> <li>\u901a\u7528\u7f51\u683c\uff1a\u5c06\u4efb\u610f\u5757\u5143\u7d20\u6392\u5217\u6210\u77e9\u5f62</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_61","title":"\u5361\u7247\u7f51\u683c","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_62","title":"\u5217\u8868\u8bed\u6cd5","text":"html<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n- :fontawesome-brands-html5: __HTML__\n- :fontawesome-brands-js: __JavaScript__\n- :fontawesome-brands-css3: __CSS__\n- :fontawesome-brands-internet-explorer: __Internet Explorer__\n\n&lt;/div&gt;\n</code></pre> <ul> <li> HTML</li> <li> JavaScript</li> <li> CSS</li> <li> Internet Explorer</li> </ul> <p>\u66f4\u590d\u6742\u5b9e\u4f8b </p>HTML<pre><code>&lt;div class=\"grid cards\" markdown&gt;\n\n-   :material-clock-fast:{ .lg .middle } __5\u5206\u949f\u5185\u5b89\u88c5__\n\n    ---\n\n    \u4f7f\u7528 [`pip`](#) \u5b89\u88c5 [`mkdocs-material`](#) \uff0c\u53ef\u4ee5\u518d\u51e0\u5206\u949f\u5185\u542f\u52a8\u8fd0\u884c\n\n    [:octicons-arrow-right-24: \u5f00\u59cb](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } __Markdown__\n\n    ---\n\n    \u4e13\u6ce8\u4e8e\u5185\u5bb9\u5e76\u751f\u6210\u54cd\u5e94\u8fc5\u901f\u53ef\u641c\u7d22\u7684\u9759\u6001\u7f51\u7ad9\n\n    [:octicons-arrow-right-24: \u53c2\u8003](#)\n\n-   :material-format-font:{ .lg .middle } __\u5b9a\u5236__\n\n    ---\n\n    \u4ec5\u7528\u51e0\u884c\u6539\u53d8\u989c\u8272\uff0c\u5b57\u4f53\uff0c\u8bed\u8a00\uff0c\u56fe\u6807\uff0c\u8868\u793a\u7b49\u7b49\n\n    [:octicons-arrow-right-24: \u5b9a\u5236](#)\n\n-   :material-scale-balance:{ .lg .middle } __\u5f00\u6e90__\n\n    ---\n\n    \u53ef\u5728 [GitHub] \u4e0a\u83b7\u5f97\n\n    [:octicons-arrow-right-24: \u8bb8\u53ef\u8bc1](#)\n\n&lt;/div&gt;\n</code></pre><p></p> <ul> <li> <p> 5\u5206\u949f\u5185\u5b89\u88c5</p> <p>\u4f7f\u7528 <code>pip</code> \u5b89\u88c5 <code>mkdocs-material</code> \uff0c\u53ef\u4ee5\u518d\u51e0\u5206\u949f\u5185\u542f\u52a8\u8fd0\u884c</p> <p> \u5f00\u59cb</p> </li> <li> <p> Markdown</p> <p>\u4e13\u6ce8\u4e8e\u5185\u5bb9\u5e76\u751f\u6210\u54cd\u5e94\u8fc5\u901f\u53ef\u641c\u7d22\u7684\u9759\u6001\u7f51\u7ad9</p> <p> \u53c2\u8003</p> </li> <li> <p> \u5b9a\u5236</p> <p>\u4ec5\u7528\u51e0\u884c\u6539\u53d8\u989c\u8272\uff0c\u5b57\u4f53\uff0c\u8bed\u8a00\uff0c\u56fe\u6807\uff0c\u8868\u793a\u7b49\u7b49</p> <p> \u5b9a\u5236</p> </li> <li> <p> \u5f00\u6e90</p> <p>\u53ef\u5728 [GitHub] \u4e0a\u83b7\u5f97</p> <p> \u8bb8\u53ef\u8bc1</p> </li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_63","title":"\u5757\u8bed\u6cd5","text":"HTML<pre><code>&lt;div class=\"grid\" markdown&gt;\n\n:fontawesome-brands-html5: __HTML__\n{ .card }\n\n:fontawesome-brands-js: __JavaScript__\n{ .card }\n\n:fontawesome-brands-css3: __CSS__\n{ .card }\n\n&gt; :fontawesome-brands-internet-explorer: __Internet Explorer__\n\n&lt;/div&gt;\n</code></pre> <p> HTML</p> <p> JavaScript</p> <p> CSS</p> <p> Internet Explorer</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_64","title":"\u901a\u7528\u7f51\u683c","text":"\u65e0\u5e8f\u8868\u6709\u5e8f\u8868 <ul> <li>\u5185\u5bb91</li> <li>\u5185\u5bb92</li> <li>\u5185\u5bb93</li> </ul> <ol> <li>\u5185\u5bb91</li> <li>\u5185\u5bb92</li> <li>\u5185\u5bb93</li> </ol> \u5185\u5bb9\u9009\u9879\u5361<pre><code>=== \"\u65e0\u5e8f\u8868\"\n\n    * \u5185\u5bb91\n    * \u5185\u5bb92\n    * \u5185\u5bb93\n\n=== \"\u6709\u5e8f\u8868\"\n\n    1. \u5185\u5bb91\n    2. \u5185\u5bb92\n    3. \u5185\u5bb93\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_65","title":"\u56fe\u6807\uff0c\u8868\u60c5\u7b26\u53f7","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_66","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_67","title":"\u67e5\u627e\u56fe\u6807","text":"<p>\u5b98\u65b9\u7f51\u5740</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_68","title":"\u7528\u6cd5","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_69","title":"\u8868\u60c5","text":"Markdown<pre><code>:smile:\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_70","title":"\u56fe\u6807","text":"Markdown<pre><code>:fontawesome-regular-face-laugh-wink:\n</code></pre> <p>\u5c06\u8def\u5f84\u7684<code>/</code>\u66ff\u6362\u4e3a<code>-</code></p> <p></p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_71","title":"\u6539\u53d8\u989c\u8272","text":"<code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> CSS<pre><code>.youtube {\n  color: #EE0F0F;\n}\n</code></pre> YAML<pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_72","title":"\u6dfb\u52a0\u52a8\u753b","text":"<code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> CSS<pre><code>@keyframes heart {\n  0%, 40%, 80%, 100% {\n    transform: scale(1);\n  }\n  20%, 60% {\n    transform: scale(1.15);\n  }\n}\n.heart {\n  animation: heart 1000ms infinite;\n}\n</code></pre> YAML<pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> Markdown<pre><code>:octicons-heart-fill-24:{ .heart }\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_73","title":"\u56fe\u50cf","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_74","title":"\u56fe\u50cf\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.blocks.caption\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_75","title":"\u706f\u5149\u7bb1","text":"Bash<pre><code>pip install mkdocs-glightbox\n</code></pre> YAML<pre><code>plugins:\n  - glightbox\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_76","title":"\u56fe\u7247\u5bf9\u9f50","text":"Markdown<pre><code>=== \"\u56fe\u7247\u9760\u5de6\"\n\n    ``` markdown title=\"\u56fe\u7247, \u6392\u5217\u9760\u5de6\"\n    ![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left }\n    ```\n\n    &lt;div class=\"result\" markdown&gt;\n\n    ![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa?text=\u2013%20Image%20\u2013){ align=left width=300 }\n\n    \u8fd9\u91cc\u662f\u6587\u5b57\n\n    &lt;/div&gt;\n\n=== \"\u56fe\u7247\u9760\u53f3\"\n\n    ``` markdown title=\"\u56fe\u7247, \u6392\u5217\u9760\u53f3\"\n    ![Image title](https://dummyimage.com/600x400/eee/aaa){ align=right }\n    ```\n\n    &lt;div class=\"result\" markdown&gt;\n\n    ![Image title](https://dummyimage.com/600x400/f5f5f5/aaaaaa?text=\u2013%20Image%20\u2013){ align=right width=300 }\n\n    \u8fd9\u91cc\u662f\u6587\u5b57\n\n    &lt;/div&gt;\n</code></pre> \u56fe\u7247\u9760\u5de6\u56fe\u7247\u9760\u53f3 \u56fe\u7247, \u6392\u5217\u9760\u5de6<pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left }\n</code></pre> <p>\u8fd9\u91cc\u662f\u6587\u5b57</p> \u56fe\u7247, \u6392\u5217\u9760\u53f3<pre><code>![Image title](https://dummyimage.com/600x400/eee/aaa){ align=right }\n</code></pre> <p></p> <p>\u8fd9\u91cc\u662f\u6587\u5b57</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_77","title":"\u56fe\u7247\u6807\u9898","text":"HTML<pre><code>&lt;figure markdown=\"span\"&gt;\n  ![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n  &lt;figcaption&gt;\u56fe\u7247\u6807\u9898&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> \u56fe\u7247\u6807\u9898"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_78","title":"\u5217\u8868","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_79","title":"\u914d\u7f6e","text":"YAML<pre><code>markdown_extensions:\n  - def_list\n  - pymdownx.tasklist:\n      custom_checkbox: true\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_80","title":"\u4f7f\u7528","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_81","title":"\u65e0\u5e8f\u5217\u8868","text":"<ul> <li>1</li> <li>2</li> <li>3</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_82","title":"\u6709\u5e8f\u5217\u8868","text":"<ol> <li>1</li> <li>2</li> <li>3</li> </ol>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_83","title":"\u5b9a\u4e49\u5217\u8868","text":"Markdown<pre><code>`\u6211\u7684\u5217\u88681`\n\n:   \u6587\u5b57\u8bf4\u660e\n\n`\u6211\u7684\u5217\u88682`\n\n:   \u6587\u5b57\u8bf4\u660e\n</code></pre> <code>\u6211\u7684\u5217\u88681</code> <p>\u6587\u5b57\u8bf4\u660e</p> <code>\u6211\u7684\u5217\u88682</code> <p>\u6587\u5b57\u8bf4\u660e</p>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_84","title":"\u4efb\u52a1\u5217\u8868","text":"<ul> <li> 1</li> <li> 2<ul> <li> 1</li> <li> 2</li> <li> 3</li> </ul> </li> <li> 3</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_85","title":"\u6570\u5b66","text":""},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_86","title":"\u914d\u7f6e","text":"<p>\u4f7f\u7528Mathjax</p> <code>docs/javascripts/mathjax.js</code> <code>mkdocs.yml</code> JavaScript<pre><code>window.MathJax = {\n  tex: {\n    inlineMath: [[\"\\\\(\", \"\\\\)\"]],\n    displayMath: [[\"\\\\[\", \"\\\\]\"]],\n    processEscapes: true,\n    processEnvironments: true\n  },\n  options: {\n    ignoreHtmlClass: \".*|\",\n    processHtmlClass: \"arithmatex\"\n  }\n};\n\ndocument$.subscribe(() =&gt; {\n  MathJax.startup.output.clearCache()\n  MathJax.typesetClear()\n  MathJax.texReset()\n  MathJax.typesetPromise()\n})\n</code></pre> YAML<pre><code>markdown_extensions:\n  - pymdownx.arithmatex:\n      generic: true\n\nextra_javascript:\n  - javascripts/mathjax.js\n  - https://unpkg.com/mathjax@3/es5/tex-mml-chtml.js\n</code></pre>"},{"location":"%E6%9D%82%E9%A1%B9/mkdocs-material%E5%AD%A6%E4%B9%A0/%E5%8F%82%E8%80%83/#_87","title":"\u6570\u5b66\u516c\u5f0f\u7b80\u6613\u914d\u7f6e","text":"<p>\u4f7f\u7528Katex</p> <code>docs/javascripts/katex.js</code> <code>mkdocs.yml</code> JavaScript<pre><code>document$.subscribe(({ body }) =&gt; { \n  renderMathInElement(body, {\n    delimiters: [\n      { left: \"$$\",  right: \"$$\",  display: true },\n      { left: \"$\",   right: \"$\",   display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true }\n    ],\n  })\n})\n</code></pre> YAML<pre><code>markdown_extensions:\n  - pymdownx.arithmatex:\n      generic: true\n\nextra_javascript:\n  - javascripts/katex.js\n  - https://unpkg.com/katex@0/dist/katex.min.js\n  - https://unpkg.com/katex@0/dist/contrib/auto-render.min.js\n\nextra_css:\n  - https://unpkg.com/katex@0/dist/katex.min.css\n</code></pre> 2025-10-07 06:23:112025-10-07 06:23:11 <ol> <li> <p>\u811a\u6ce81\u00a0\u21a9</p> </li> <li> <p>\u811a\u6ce82\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/archive/2025/","title":"\u5341\u6708 2025","text":""},{"location":"blog/archive/2025/#2025","title":"\u5341\u6708 2025","text":"2025-10-07 06:23:272025-10-07 06:23:27"}]}